local lIl1li1lIIIIl1ii1lIII = assert local l1II1ilIII1lII1IIil = select local IiIlIi1I11llI1I1il1 = tonumber local lIl11Iil1IllI1i1ii1I1 = unpack local liIIIlllII1lI11l11l = pcall local I1IiIi1IlIllilIIIll = setfenv local IlllIIIIi11iiII1l1i = setmetatable local lIl1ilIII1iI11IIlI1iI = type local illIl11lIli1I11Ill1 = getfenv local l11IIiiillIli1i1IIl = tostring local I1lIliiIli1il1IiI1l = error local II1IliIliIilillIIIl = string.sub local I1li1l11I1ilIIiIIll = string.byte local lIlill1IIlIIl1iiII1il = string.char local ii1Il1iI1i11Iiill1I = string.rep local il1i1IlIiililllilI1 = string.gsub local lIiIilI1IlIliII111I = string.match local IIi1I1il1li1iIlIili = table.insert local lIl1IiiIil11Iill1iIi1 = I1li1l11I1ilIIiIIll("-", 1) local iIliili11iIilIll1il, lIliil1llIiliili11Iil = #{953}, #{ 3121, 1396, 928, 1165, 960, 1398, 4583, 81, 5648, 1120, 2393, 1997, 6710, 5781, 790, 5094, 3179, 3336, 4864, 2536, 2492 } + lIl1IiiIil11Iill1iIi1 + 131005 local lIlliiiliI1I1IIlIllI1 = {} local iiillIiIIIiIiiII11i = 1 local l11iIl1i1I1Ilii1iI1, IiIl1ll1iilliIIlllI local function lIlliI11lii1IlliI1IIi(iI1IiiIiiII1lii1iII, II11Ili11llliil1Iii) local ii1i11Iili11IlI11I1 iI1IiiIiiII1lii1iII = il1i1IlIiililllilI1(II1IliIliIilillIIIl(iI1IiiIiiII1lii1iII, 5), "..", function(lII1iiil11I1llIl1iI) if I1li1l11I1ilIIiIIll(lII1iiil11I1llIl1iI, 2) == 72 then ii1i11Iili11IlI11I1 = IiIlIi1I11llI1I1il1(II1IliIliIilillIIIl(lII1iiil11I1llIl1iI, 1, 1)) return "" else local Ii1IIlIIl1lilllIIll = lIlill1IIlIIl1iiII1il(IiIlIi1I11llI1I1il1(lII1iiil11I1llIl1iI, 16)) if ii1i11Iili11IlI11I1 then local lIl1i1illIli11Iii11II = ii1Il1iI1i11Iiill1I(Ii1IIlIIl1lilllIIll, ii1i11Iili11IlI11I1) ii1i11Iili11IlI11I1 = nil return lIl1i1illIli11Iii11II else return Ii1IIlIIl1lilllIIll end end end) local function ii1lllllliIIiiIi1li() local lIlI11I1Il1IIllIIIil1 = I1li1l11I1ilIIiIIll(iI1IiiIiiII1lii1iII, iiillIiIIIiIiiII11i, iiillIiIIIiIiiII11i) iiillIiIIIiIiiII11i = iiillIiIIIiIiiII11i + 1 return lIlI11I1Il1IIllIIIil1 end local function lIl1IIiliilI1lIi1i1Ii() local lIlI11I1Il1IIllIIIil1, Ii1IIlIIl1lilllIIll, lIl1i1illIli11Iii11II, Il1iI1IiiIlli1ilil1 = I1li1l11I1ilIIiIIll(iI1IiiIiiII1lii1iII, iiillIiIIIiIiiII11i, iiillIiIIIiIiiII11i + 3) iiillIiIIIiIiiII11i = iiillIiIIIiIiiII11i + 4 return Il1iI1IiiIlli1ilil1 * 16777216 + lIl1i1illIli11Iii11II * 65536 + Ii1IIlIIl1lilllIIll * 256 + lIlI11I1Il1IIllIIIil1 end local function IiiiliIliI1iIIIllIi(iIi1IlIII1iIll1iIl1, iiIil1IIllilIl1iII1, lIl1iIlII11llI1i1Illi) if lIl1iIlII11llI1i1Illi then local lIIlii1i1i1i1IiII1l, lI1i1iII1li1iiIiIl1 = 0, 0 for lIli11lliiili1li1Illl = iiIil1IIllilIl1iII1, lIl1iIlII11llI1i1Illi do lIIlii1i1i1i1IiII1l = lIIlii1i1i1i1IiII1l + 2 ^ lI1i1iII1li1iiIiIl1 * IiiiliIliI1iIIIllIi(iIi1IlIII1iIll1iIl1, lIli11lliiili1li1Illl) lI1i1iII1li1iiIiIl1 = lI1i1iII1li1iiIiIl1 + 1 end return lIIlii1i1i1i1IiII1l else local lIl1l1iilliiIi1ilIIil = 2 ^ (iiIil1IIllilIl1iII1 - 1) return lIl1l1iilliiIi1ilIIil <= iIi1IlIII1iIll1iIl1 % (lIl1l1iilliiIi1ilIIil + lIl1l1iilliiIi1ilIIil) and 1 or 0 end end local function iIIllI1IIiiiilIi1ll() local lIlI11I1Il1IIllIIIil1, Ii1IIlIIl1lilllIIll = lIl1IIiliilI1lIi1i1Ii(), lIl1IIiliilI1lIi1i1Ii() if lIlI11I1Il1IIllIIIil1 == 0 and Ii1IIlIIl1lilllIIll == 0 then return 0 end return (-2 * IiiiliIliI1iIIIllIi(Ii1IIlIIl1lilllIIll, 32) + 1) * 2 ^ (IiiiliIliI1iIIIllIi(Ii1IIlIIl1lilllIIll, 21, 31) - 1023) * ((IiiiliIliI1iIIIllIi(Ii1IIlIIl1lilllIIll, 1, 20) * 4294967296 + lIlI11I1Il1IIllIIIil1) / 4503599627370496 + 1) end local liil1IiIiilIIiiiI1i = bit or bit32 local iIl11lI1IIiIlIlilII = liil1IiIiilIIiiiI1i and liil1IiIiilIIiiiI1i.bxor or function(lIlI11I1Il1IIllIIIil1, Ii1IIlIIl1lilllIIll) local Il1IlIii1iliIliI1ll = 1 local lIl1i1illIli11Iii11II = 0 while lIlI11I1Il1IIllIIIil1 > 0 and Ii1IIlIIl1lilllIIll > 0 do local lIliliIIlIi1Ii1i1I1II = lIlI11I1Il1IIllIIIil1 % 2 local lIlIIillIililililiI1I = Ii1IIlIIl1lilllIIll % 2 if lIliliIIlIi1Ii1i1I1II ~= lIlIIillIililililiI1I then lIl1i1illIli11Iii11II = lIl1i1illIli11Iii11II + Il1IlIii1iliIliI1ll end lIlI11I1Il1IIllIIIil1 = (lIlI11I1Il1IIllIIIil1 - lIliliIIlIi1Ii1i1I1II) / 2 Ii1IIlIIl1lilllIIll = (Ii1IIlIIl1lilllIIll - lIlIIillIililililiI1I) / 2 Il1IlIii1iliIliI1ll = Il1IlIii1iliIliI1ll * 2 end if lIlI11I1Il1IIllIIIil1 < Ii1IIlIIl1lilllIIll then lIlI11I1Il1IIllIIIil1 = Ii1IIlIIl1lilllIIll end while lIlI11I1Il1IIllIIIil1 > 0 do local lIliliIIlIi1Ii1i1I1II = lIlI11I1Il1IIllIIIil1 % 2 if lIliliIIlIi1Ii1i1I1II > 0 then lIl1i1illIli11Iii11II = lIl1i1illIli11Iii11II + Il1IlIii1iliIliI1ll end lIlI11I1Il1IIllIIIil1 = (lIlI11I1Il1IIllIIIil1 - lIliliIIlIi1Ii1i1I1II) / 2 Il1IlIii1iliIliI1ll = Il1IlIii1iliIliI1ll * 2 end return lIl1i1illIli11Iii11II end local function li1lI1IIi1liil1lllI(Iii1IIliIiillIiIiii) local l1Ii1ili11illlll1ll = { I1li1l11I1ilIIiIIll(iI1IiiIiiII1lii1iII, iiillIiIIIiIiiII11i, iiillIiIIIiIiiII11i + 3) } iiillIiIIIiIiiII11i = iiillIiIIIiIiiII11i + 4 local lIlI11I1Il1IIllIIIil1 = iIl11lI1IIiIlIlilII(l1Ii1ili11illlll1ll[1], IiIl1ll1iilliIIlllI) local Ii1IIlIIl1lilllIIll = iIl11lI1IIiIlIlilII(l1Ii1ili11illlll1ll[2], IiIl1ll1iilliIIlllI) local lIl1i1illIli11Iii11II = iIl11lI1IIiIlIlilII(l1Ii1ili11illlll1ll[3], IiIl1ll1iilliIIlllI) local Il1iI1IiiIlli1ilil1 = iIl11lI1IIiIlIlilII(l1Ii1ili11illlll1ll[4], IiIl1ll1iilliIIlllI) IiIl1ll1iilliIIlllI = (213 * IiIl1ll1iilliIIlllI + Iii1IIliIiillIiIiii) % 256 return Il1iI1IiiIlli1ilil1 * 16777216 + lIl1i1illIli11Iii11II * 65536 + Ii1IIlIIl1lilllIIll * 256 + lIlI11I1Il1IIllIIIil1 end local function II1111I1IIiIIlliI11(Iil11Il1il11lI1Ili1) local liI11liIl1llI1iiIll = lIl1IIiliilI1lIi1i1Ii() local IiIiIi11I11illil11i = "" for lIli11lliiili1li1Illl = iIliili11iIilIll1il, liI11liIl1llI1iiIll do IiIiIi11I11illil11i = IiIiIi11I11illil11i .. lIlill1IIlIIl1iiII1il(iIl11lI1IIiIlIlilII(I1li1l11I1ilIIiIIll(iI1IiiIiiII1lii1iII, iiillIiIIIiIiiII11i + lIli11lliiili1li1Illl - 1), l11iIl1i1I1Ilii1iI1)) l11iIl1i1I1Ilii1iI1 = (Iil11Il1il11lI1Ili1 * l11iIl1i1I1Ilii1iI1 + 59) % 256 end iiillIiIIIiIiiII11i = iiillIiIIIiIiiII11i + liI11liIl1llI1iiIll return IiIiIi11I11illil11i end l11iIl1i1I1Ilii1iI1 = ii1lllllliIIiiIi1li() IiIl1ll1iilliIIlllI = ii1lllllliIIiiIi1li() local li1iiiil1i11111iii1 = {} for lIli11lliiili1li1Illl = iIliili11iIilIll1il, ii1lllllliIIiiIi1li() do local iIliIi1ill1iIIl1I1l = ii1lllllliIIiiIi1li() local iill111il11liliIiil = (lIli11lliiili1li1Illl - 1) * 2 li1iiiil1i11111iii1[iill111il11liliIiil] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, 1, 4) li1iiiil1i11111iii1[iill111il11liliIiil + 1] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, 5, 8) end local function lIIil1II1liiliii1ii() local lIlI11lilil1liIi1iili = { nil, {}, nil, {}, {}, nil, {} } ii1lllllliIIiiIi1li() lIl1IIiliilI1lIi1i1Ii() local liIilllIl1i1iIIiil1 = lIl1IIiliilI1lIi1i1Ii() - (#{ 5313, 4473, 4576, 953, 6929, 1821, 2189, 617, 753, 6763, 3313, 4196, 6557, 1783, 1534, 3950, 640, 5535, 4732, 4897, 1446, 1102 } + lIl1IiiIil11Iill1iIi1 + 133688) local I1i1i1llI111iiIlIIi = ii1lllllliIIiiIi1li() for lIli11lliiili1li1Illl = iIliili11iIilIll1il, liIilllIl1i1iIIiil1 do local ilIIiiiI1lIIIi1iliI local lIl1ilIII1iI11IIlI1iI = ii1lllllliIIiiIi1li() if lIl1ilIII1iI11IIlI1iI == #{ 5561, 2420, 3728, 6545, 5200, 3977, 737, 5527, 267, 994, 3048, 4540, 3556, 5050, 6594, 3695, 4072, 3151, 448, 629, 2341, 796, 6269 } + lIl1IiiIil11Iill1iIi1 + 179 then ilIIiiiI1lIIIi1iliI = II1IliIliIilillIIIl(II1111I1IIiIIlliI11(I1i1i1llI111iiIlIIi), #{ 5227, 6708, 5009, 2789, 959 }) end if lIl1ilIII1iI11IIlI1iI == #{ 3988, 6786, 4489, 2413, 3488, 1869, 3005, 230, 3273, 1557, 5051, 6123, 2492, 2125, 4723, 6457, 1156, 4680, 1397, 5727, 2362, 6462 } + lIl1IiiIil11Iill1iIi1 + 72 then ilIIiiiI1lIIIi1iliI = ii1lllllliIIiiIi1li() + lIl1IIiliilI1lIi1i1Ii() + iIIllI1IIiiiilIi1ll() end if lIl1ilIII1iI11IIlI1iI == #{ 6495, 1864, 478, 2339, 659, 1728, 391, 4617, 3693, 2975, 5547, 3246, 6713, 5249, 494, 1084, 4719, 4114, 1609, 1624, 5087, 4723, 3182 } + lIl1IiiIil11Iill1iIi1 + -16 then ilIIiiiI1lIIIi1iliI = lIl1IIiliilI1lIi1i1Ii() end if lIl1ilIII1iI11IIlI1iI == #{ 3741, 2600, 2192, 2911, 5928, 1122, 5745, 864, 6842, 207, 547, 760, 5291, 4781, 43, 773, 6648, 1573, 4051, 2794, 4134 } + lIl1IiiIil11Iill1iIi1 + 92 then ilIIiiiI1lIIIi1iliI = II1IliIliIilillIIIl(II1111I1IIiIIlliI11(#{ 4993, 3157, 3918, 6830, 3886, 3092, 6446, 4341, 6211, 1537, 6447, 6000, 6594, 2800, 3457, 935, 5700, 3605, 6283, 6958, 1345, 4718, 4095 } + lIl1IiiIil11Iill1iIi1 + 52), #{4939}) end if lIl1ilIII1iI11IIlI1iI == #{ 1816, 5261, 866, 4385, 3990, 6644, 5925, 2493, 1255, 623, 1743, 6093, 4080, 1862, 4355, 3245, 1606, 2072, 5745, 442 } + lIl1IiiIil11Iill1iIi1 + 81 then ilIIiiiI1lIIIi1iliI = lIl1IIiliilI1lIi1i1Ii() end if lIl1ilIII1iI11IIlI1iI == #{ 3237, 2031, 1311, 3677, 5505, 1705, 6359, 5648, 6056, 4656, 6247, 3814, 1814, 3664, 366, 253, 4184, 634, 2264, 2074, 1904, 4846 } + lIl1IiiIil11Iill1iIi1 + 26 then ilIIiiiI1lIIIi1iliI = ii1lllllliIIiiIi1li() end if lIl1ilIII1iI11IIlI1iI == #{ 227, 201, 1809, 4490, 4091, 631, 4741, 1220, 6455, 248, 1936, 5650, 2607, 4044, 1639, 5272, 2596, 2260, 4843, 4293, 865, 1869, 2261 } + lIl1IiiIil11Iill1iIi1 + 26 then ilIIiiiI1lIIIi1iliI = #{ 440, 1375, 6211, 573, 5718, 5738, 2313, 6089, 5421, 2061, 1592, 6655, 6032, 3741, 6105, 2797, 6726, 1852, 1257, 3371, 6038 } + lIl1IiiIil11Iill1iIi1 + 103726 == #{ 440, 1375, 6211, 573, 5718, 5738, 2313, 6089, 5421, 2061, 1592, 6655, 6032, 3741, 6105, 2797, 6726, 1852, 1257, 3371, 6038 } + lIl1IiiIil11Iill1iIi1 + 103726 end if lIl1ilIII1iI11IIlI1iI == #{ 2353, 6056, 4578, 2760, 4857, 3167, 6762, 1106, 1787, 370, 3096, 1449, 4385, 5662, 1455, 2210, 6229, 5346, 1993, 755, 1727, 2146 } + lIl1IiiIil11Iill1iIi1 + 146 then ilIIiiiI1lIIIi1iliI = #{ 4154, 5150, 4670, 1445, 6277, 4594, 3998, 67, 6320, 3026, 1383, 3181, 3438, 5588, 4079, 5190, 6885, 6411, 34, 1310, 2710 } + lIl1IiiIil11Iill1iIi1 + 11319 == #{ 3184, 5900, 5883, 4823, 392, 2071, 6825, 5117, 6554, 4629, 6627, 4671, 703, 3450, 3881, 3537, 5054, 3840, 5562, 6580, 3098, 4620, 6068 } + lIl1IiiIil11Iill1iIi1 + 63804 end if lIl1ilIII1iI11IIlI1iI == #{ 319, 3684, 6250, 2672, 6118, 6036, 1100, 2211, 1908, 5248, 6616, 5104, 5375, 4957, 6121, 3382, 4163, 3517, 2014, 3143, 2358, 2735 } + lIl1IiiIil11Iill1iIi1 + 43 then ilIIiiiI1lIIIi1iliI = iIIllI1IIiiiilIi1ll() end lIlI11lilil1liIi1iili[7][lIli11lliiili1li1Illl - iIliili11iIilIll1il] = ilIIiiiI1lIIIi1iliI end local liIilllIl1i1iIIiil1 = lIl1IIiliilI1lIi1i1Ii() for lIli11lliiili1li1Illl = iIliili11iIilIll1il, liIilllIl1i1iIIiil1 do lIlI11lilil1liIi1iili[2][lIli11lliiili1li1Illl] = lIl1IIiliilI1lIi1i1Ii() end lIlI11lilil1liIi1iili[1] = ii1lllllliIIiiIi1li() lIlI11lilil1liIi1iili[6] = ii1lllllliIIiiIi1li() lIlI11lilil1liIi1iili[3] = ii1lllllliIIiiIi1li() local liIilllIl1i1iIIiil1 = lIl1IIiliilI1lIi1i1Ii() for lIli11lliiili1li1Illl = iIliili11iIilIll1il, liIilllIl1i1iIIiil1 do lIlI11lilil1liIi1iili[4][lIli11lliiili1li1Illl - iIliili11iIilIll1il] = lIIil1II1liiliii1ii() end ii1lllllliIIiiIi1li() local iiI1liIiiliI1i1IlI1 = lIl1IIiliilI1lIi1i1Ii() - (#{ 6255, 4747, 4231, 114, 5084, 4933, 4012, 2052, 4398, 862, 606, 6441, 424, 4454, 6051, 5953, 4630, 3595, 925, 2567, 6083, 3049, 321 } + lIl1IiiIil11Iill1iIi1 + 133719) local lI1illIlI1i1I1I1i1i = ii1lllllliIIiiIi1li() for lIli11lliiili1li1Illl = iIliili11iIilIll1il, iiI1liIiiliI1i1IlI1 do local i1Ii1lIii1lli1li11l = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iIliIi1ill1iIIl1I1l = li1lI1IIi1liil1lllI(lI1illIlI1i1I1I1i1i) i1Ii1lIii1lli1li11l[2] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, #{ 5022, 1962, 3171, 4119, 6889, 4363, 2303, 5051, 2121, 6131, 1060, 4316, 607, 2729, 4303, 2811, 6668, 5203, 5825, 5144, 4885, 5687 } + lIl1IiiIil11Iill1iIi1 + -40, #{ 1761, 6923, 1500, 4474, 1455, 811, 6172, 1105, 2944, 5932, 1235, 1264, 5081, 6698, 6066, 161, 5362, 159, 4933, 1817, 1214, 4004, 6793, 251 } + lIl1IiiIil11Iill1iIi1 + -37) i1Ii1lIii1lli1li11l[6] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, #{ 1386, 6702, 695, 3202, 4512, 5373, 2900, 5711, 1411, 386 }, #{ 5777, 5804, 5005, 3414, 5796, 1267, 6667, 1046, 5641, 2660, 3148, 4365, 2112, 6435, 1460, 6603, 5998, 1633 }) i1Ii1lIii1lli1li11l[4] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, #{4605}, #{ 3288, 5617, 2010, 6860, 4191, 2239, 4446, 4377, 6713 }) i1Ii1lIii1lli1li11l[9] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, #{2956}, #{ 3701, 1867, 785, 2645, 6225, 257, 6402, 3973, 6923, 4836, 6530, 6534, 1273, 2208, 5354, 3674, 5098, 4945 }) i1Ii1lIii1lli1li11l[8] = IiiiliIliI1iIIIllIi(iIliIi1ill1iIIl1I1l, #{ 2757, 5106, 4732, 4776, 4654, 1292, 2364, 624, 4011, 1948, 2482, 3092, 1510, 1654, 1073, 1142, 5426, 4706, 3295 }, #{ 5610, 1357, 2014, 4909, 6911, 5841, 3881, 4361, 748, 370, 1174, 3931, 53, 4015, 1157, 6405, 689, 3242, 6030, 1528, 5097 } + lIl1IiiIil11Iill1iIi1 + -40) lIlI11lilil1liIi1iili[5][lIli11lliiili1li1Illl] = i1Ii1lIii1lli1li11l end for lIli11lliiili1li1Illl = iIliili11iIilIll1il, iiI1liIiiliI1i1IlI1 do local i1Ii1lIii1lli1li11l = lIlI11lilil1liIi1iili[5][lIli11lliiili1li1Illl] local lIIlllIi1IIll1iIIi1 = li1iiiil1i11111iii1[i1Ii1lIii1lli1li11l[2]] if lIIlllIi1IIll1iIIi1 == #{3652} and i1Ii1lIii1lli1li11l[4] > 255 then i1Ii1lIii1lli1li11l[7] = true i1Ii1lIii1lli1li11l[5] = lIlI11lilil1liIi1iili[7][i1Ii1lIii1lli1li11l[4] - 256] end if lIIlllIi1IIll1iIIi1 == #{ 4597, 5112, 6237 } then if i1Ii1lIii1lli1li11l[4] > 255 then i1Ii1lIii1lli1li11l[7] = true i1Ii1lIii1lli1li11l[5] = lIlI11lilil1liIi1iili[7][i1Ii1lIii1lli1li11l[4] - 256] end if i1Ii1lIii1lli1li11l[6] > 255 then i1Ii1lIii1lli1li11l[1] = true i1Ii1lIii1lli1li11l[10] = lIlI11lilil1liIi1iili[7][i1Ii1lIii1lli1li11l[6] - 256] end end if lIIlllIi1IIll1iIIi1 == #{6773, 4310} and i1Ii1lIii1lli1li11l[6] > 255 then i1Ii1lIii1lli1li11l[1] = true i1Ii1lIii1lli1li11l[10] = lIlI11lilil1liIi1iili[7][i1Ii1lIii1lli1li11l[6] - 256] end if lIIlllIi1IIll1iIIi1 == #{ 4756, 3625, 1721, 1083 } then i1Ii1lIii1lli1li11l[3] = lIlI11lilil1liIi1iili[7][i1Ii1lIii1lli1li11l[9]] end end lIl1IIiliilI1lIi1i1Ii() return lIlI11lilil1liIi1iili end local function lIl1illlilliIiI1iI111(lIlI11lilil1liIi1iili, II11Ili11llliil1Iii, lIllI1ill11IIllIli1Il) local lIliiIIiIi1iiIIIIIi, i11II1iiliIIiIIilii = 1, 2 local lIIilIIiiiIiii11Ii1 = lIlI11lilil1liIi1iili[5] local IIIIIliIilill111ii1 = 1 local lIliIi11IiIl1liii1iIi = lIlI11lilil1liIi1iili[4] local IIllI1l1lIi1IIi1lIi = lIlI11lilil1liIi1iili[6] local II1Ii1I1II11IlliliI = lIlI11lilil1liIi1iili[3] local iIIlllli111iiI1lil1 = 2 local lIli1Il111Il1lI1il1li = lIlI11lilil1liIi1iili[2] local i1IlIliiil1liliii11 = 4 local function lIii1IlI1iIi11lIill(...) local lIlIiIii1ii1I11IIilli = 0 local Iiiilil1I1iIi1IIl1l = { lIl11Iil1IllI1i1ii1I1({}, 1, II1Ii1I1II11IlliliI) } local iIl1IliililII1liI11 = 1 local lIllI11il1lIiI1iIII = {} local iiIIIlil11i11IlI1il = {} local II11Ili11llliil1Iii = illIl11lIli1I11Ill1() local liI1llllIIi1l1iIIli = { ... } local iI1iliIiiiil1lIIi1I = #liI1llllIIi1l1iIIli - 1 for lIli11lliiili1li1Illl = 0, iI1iliIiiiil1lIIi1I do if lIli11lliiili1li1Illl < IIllI1l1lIi1IIi1lIi then Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = liI1llllIIi1l1iIIli[lIli11lliiili1li1Illl + 1] end end local function ilili1IiilliIIi1iil(...) local lIl1i1illIli11Iii11II = l1II1ilIII1lII1IIil("#", ...) local lIliil1IiliI1lilI1l1l = { ... } return lIl1i1illIli11Iii11II, lIliil1IiliI1lilI1l1l end local function lIl1iliIIi11l1IiiI1I1() while true do local IIilllII11IiiIilI11 = lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] local liIiii11I11lI11llIi = IIilllII11IiiIilI11[2] iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 if liIiii11I11lI11llIi < 12 then if liIiii11I11lI11llIi < 6 then if liIiii11I11lI11llIi < 3 then if liIiii11I11lI11llIi < 1 then if IIilllII11IiiIilI11[6] == 248 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 13, [8] = (IIilllII11IiiIilI11[8] - 16) % 256, [4] = (IIilllII11IiiIilI11[4] - 16) % 256 } else local llII11lII111Iliill1 = IIilllII11IiiIilI11[8] local liIilllIl1i1iIIiil1 = IIilllII11IiiIilI11[4] local llIIil1ilI11iI1ilil = liIilllIl1i1iIIiil1 > 0 and liIilllIl1i1iIIiil1 - 1 or iI1iliIiiiil1lIIi1I - IIllI1l1lIi1IIi1lIi if llIIil1ilI11iI1ilil < 0 then llIIil1ilI11iI1ilil = -1 end for lIli11lliiili1li1Illl = llII11lII111Iliill1, llII11lII111Iliill1 + llIIil1ilI11iI1ilil do Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = liI1llllIIi1l1iIIli[IIllI1l1lIi1IIi1lIi + (lIli11lliiili1li1Illl - llII11lII111Iliill1) + 1] end if liIilllIl1i1iIIiil1 == 0 then lIlIiIii1ii1I11IIilli = llII11lII111Iliill1 + llIIil1ilI11iI1ilil for lIli11lliiili1li1Illl = lIlIiIii1ii1I11IIilli + 1, II1Ii1I1II11IlliliI do Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = nil end end end elseif liIiii11I11lI11llIi ~= 2 then Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] elseif IIilllII11IiiIilI11[6] == 94 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 8, [8] = (IIilllII11IiiIilI11[8] - 130) % 256, [6] = (IIilllII11IiiIilI11[4] - 130) % 256 } else Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = lIllI1ill11IIllIli1Il[IIilllII11IiiIilI11[4]] end elseif liIiii11I11lI11llIi >= 4 then if liIiii11I11lI11llIi == 5 then lIllI11il1lIiI1iIII[Iiiilil1I1iIi1IIl1l] = nil local llII11lII111Iliill1 = IIilllII11IiiIilI11[8] local IIIIi1111llIi1lI1li = IIilllII11IiiIilI11[4] if IIIIi1111llIi1lI1li == 1 then return true end local lIiIlllIlI1IIl1i1iI = llII11lII111Iliill1 + IIIIi1111llIi1lI1li - 2 if IIIIi1111llIi1lI1li == 0 then lIiIlllIlI1IIl1i1iI = lIlIiIii1ii1I11IIilli end return true, llII11lII111Iliill1, lIiIlllIlI1IIl1i1iI else local lIliliIIIlii1IIiIlI1I = lIliIi11IiIl1liii1iIi[IIilllII11IiiIilI11[9]] local ililIi111111iii11i1 = {} if lIliliIIIlii1IIiIlI1I[IIIIIliIilill111ii1] > 0 then do local lIi1i11iI1Il1iIiiii = {} ililIi111111iii11i1 = IlllIIIIi11iiII1l1i({}, { __index = function(lIliil1IiliI1lilI1l1l, i11lI1I1l1IIIi1Ill1) local lIlIlIIi1IlilIll1Iii1 = lIi1i11iI1Il1iIiiii[i11lI1I1l1IIIi1Ill1] return lIlIlIIi1IlilIll1Iii1[1][lIlIlIIi1IlilIll1Iii1[2]] end, __newindex = function(lIliil1IiliI1lilI1l1l, i11lI1I1l1IIIi1Ill1, lil1iIliiIIiIl1l1Il) local lIlIlIIi1IlilIll1Iii1 = lIi1i11iI1Il1iIiiii[i11lI1I1l1IIIi1Ill1] lIlIlIIi1IlilIll1Iii1[1][lIlIlIIi1IlilIll1Iii1[2]] = lil1iIliiIIiIl1l1Il end }) for lIli11lliiili1li1Illl = 1, lIliliIIIlii1IIiIlI1I[IIIIIliIilill111ii1] do local l1iI1l11liIII1llIli = lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] if l1iI1l11liIII1llIli[iIIlllli111iiI1lil1] == lIliiIIiIi1iiIIIIIi then lIi1i11iI1Il1iIiiii[lIli11lliiili1li1Illl - 1] = { Iiiilil1I1iIi1IIl1l, l1iI1l11liIII1llIli[i1IlIliiil1liliii11] } elseif l1iI1l11liIII1llIli[iIIlllli111iiI1lil1] == i11II1iiliIIiIIilii then lIi1i11iI1Il1iIiiii[lIli11lliiili1li1Illl - 1] = { lIllI1ill11IIllIli1Il, l1iI1l11liIII1llIli[i1IlIliiil1liliii11] } end iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 end if not lIllI11il1lIiI1iIII[Iiiilil1I1iIi1IIl1l] then lIllI11il1lIiI1iIII[Iiiilil1I1iIi1IIl1l] = {lIi1i11iI1Il1iIiiii} else IIi1I1il1li1iIlIili(lIllI11il1lIiI1iIII[Iiiilil1I1iIi1IIl1l], lIi1i11iI1Il1iIiiii) end end end local Il1l1II1li1lIiIl1i1 = lIl1illlilliIiI1iI111(lIliliIIIlii1IIiIlI1I, II11Ili11llliil1Iii, ililIi111111iii11i1) Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = Il1l1II1li1lIiIl1i1 end else iIl1IliililII1liI11 = iIl1IliililII1liI11 + (IIilllII11IiiIilI11[9] - lIliil1llIiliili11Iil) end elseif liIiii11I11lI11llIi < 9 then if liIiii11I11lI11llIi < 7 then local Ii1IIlIIl1lilllIIll, lIl1i1illIli11Iii11II if IIilllII11IiiIilI11[7] then Ii1IIlIIl1lilllIIll = IIilllII11IiiIilI11[5] else Ii1IIlIIl1lilllIIll = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] end if IIilllII11IiiIilI11[1] then lIl1i1illIli11Iii11II = IIilllII11IiiIilI11[10] else lIl1i1illIli11Iii11II = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[6]] end Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = Ii1IIlIIl1lilllIIll * lIl1i1illIli11Iii11II elseif liIiii11I11lI11llIi == 8 then if IIilllII11IiiIilI11[4] == 252 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 2, [8] = (IIilllII11IiiIilI11[8] - 87) % 256, [4] = (IIilllII11IiiIilI11[6] - 87) % 256 } else local llII11lII111Iliill1 = IIilllII11IiiIilI11[8] local iill111il11liliIiil = llII11lII111Iliill1 + 2 local l1iIiIiIii1iIll1Ili = { Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1](Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1 + 1], Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1 + 2]) } for lIli11lliiili1li1Illl = 1, IIilllII11IiiIilI11[6] do Iiiilil1I1iIi1IIl1l[iill111il11liliIiil + lIli11lliiili1li1Illl] = l1iIiIiIii1iIll1Ili[lIli11lliiili1li1Illl] end if Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1 + 3] ~= nil then Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1 + 2] = Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1 + 3] else iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 end end else local Ii1IIlIIl1lilllIIll, lIl1i1illIli11Iii11II if IIilllII11IiiIilI11[7] then Ii1IIlIIl1lilllIIll = IIilllII11IiiIilI11[5] else Ii1IIlIIl1lilllIIll = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] end if IIilllII11IiiIilI11[1] then lIl1i1illIli11Iii11II = IIilllII11IiiIilI11[10] else lIl1i1illIli11Iii11II = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[6]] end Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]][Ii1IIlIIl1lilllIIll] = lIl1i1illIli11Iii11II end elseif liIiii11I11lI11llIi < 10 then Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = IIilllII11IiiIilI11[3] elseif liIiii11I11lI11llIi ~= 11 then if not not Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] == (IIilllII11IiiIilI11[6] == 0) then iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 end else II11Ili11llliil1Iii[IIilllII11IiiIilI11[3]] = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] end elseif liIiii11I11lI11llIi >= 18 then if liIiii11I11lI11llIi < 21 then if liIiii11I11lI11llIi >= 19 then if liIiii11I11lI11llIi ~= 20 then local iill111il11liliIiil = (IIilllII11IiiIilI11[6] - 1) * 50 local i1lil1lIliIlliIIlIi = IIilllII11IiiIilI11[4] if i1lil1lIliIlliIIlIi == 0 then i1lil1lIliIlliIIlIi = lIlIiIii1ii1I11IIilli - IIilllII11IiiIilI11[8] end for lIli11lliiili1li1Illl = 1, i1lil1lIliIlliIIlIi do Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]][iill111il11liliIiil + lIli11lliiili1li1Illl] = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8] + lIli11lliiili1li1Illl] end else local llII11lII111Iliill1 = IIilllII11IiiIilI11[8] local liI1llllIIi1l1iIIli = IIilllII11IiiIilI11[4] local liiIi1I1ilIiiiiIlIi = IIilllII11IiiIilI11[6] local liiilI1ilil11IliI1i, lIiIlllIlI1IIl1i1iI, lIl1iliIIi11l1IiiI1I1 if liI1llllIIi1l1iIIli ~= 1 then if liI1llllIIi1l1iIIli ~= 0 then lIiIlllIlI1IIl1i1iI = llII11lII111Iliill1 + liI1llllIIi1l1iIIli - 1 else lIiIlllIlI1IIl1i1iI = lIlIiIii1ii1I11IIilli end lIiIlllIlI1IIl1i1iI, liiilI1ilil11IliI1i = ilili1IiilliIIi1iil(Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1](lIl11Iil1IllI1i1ii1I1(Iiiilil1I1iIi1IIl1l, llII11lII111Iliill1 + 1, lIiIlllIlI1IIl1i1iI))) else lIiIlllIlI1IIl1i1iI, liiilI1ilil11IliI1i = ilili1IiilliIIi1iil(Iiiilil1I1iIi1IIl1l[llII11lII111Iliill1]()) end if liiIi1I1ilIiiiiIlIi ~= 1 then if liiIi1I1ilIiiiiIlIi ~= 0 then lIiIlllIlI1IIl1i1iI = llII11lII111Iliill1 + liiIi1I1ilIiiiiIlIi - 2 lIlIiIii1ii1I11IIilli = lIiIlllIlI1IIl1i1iI + 1 else lIiIlllIlI1IIl1i1iI = lIiIlllIlI1IIl1i1iI + llII11lII111Iliill1 - 1 lIlIiIii1ii1I11IIilli = lIiIlllIlI1IIl1i1iI end lIl1iliIIi11l1IiiI1I1 = 0 for lIli11lliiili1li1Illl = llII11lII111Iliill1, lIiIlllIlI1IIl1i1iI do lIl1iliIIi11l1IiiI1I1 = lIl1iliIIi11l1IiiI1I1 + 1 Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = liiilI1ilil11IliI1i[lIl1iliIIi11l1IiiI1I1] end else lIlIiIii1ii1I11IIilli = llII11lII111Iliill1 - 1 end for lIli11lliiili1li1Illl = lIlIiIii1ii1I11IIilli + 1, II1Ii1I1II11IlliliI do Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = nil end end else local i1Ii1IlI1iIliiliII1 = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] local lIl1i1illIli11Iii11II if IIilllII11IiiIilI11[1] then lIl1i1illIli11Iii11II = IIilllII11IiiIilI11[10] else lIl1i1illIli11Iii11II = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[6]] end Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8] + 1] = i1Ii1IlI1iIliiliII1 Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = i1Ii1IlI1iIliiliII1[lIl1i1illIli11Iii11II] end elseif liIiii11I11lI11llIi < 23 then if liIiii11I11lI11llIi == 22 then if IIilllII11IiiIilI11[6] == 57 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 1, [8] = (IIilllII11IiiIilI11[8] - 4) % 256, [4] = (IIilllII11IiiIilI11[4] - 4) % 256 } elseif IIilllII11IiiIilI11[6] == 91 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 5, [8] = (IIilllII11IiiIilI11[8] - 17) % 256, [4] = (IIilllII11IiiIilI11[4] - 17) % 256 } else Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = #Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] end elseif IIilllII11IiiIilI11[6] == 196 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 10, [8] = (IIilllII11IiiIilI11[8] - 128) % 256, [6] = (IIilllII11IiiIilI11[4] - 128) % 256 } else Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = not Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] end elseif liIiii11I11lI11llIi == 24 then local Ii1IIlIIl1lilllIIll, lIl1i1illIli11Iii11II if IIilllII11IiiIilI11[7] then Ii1IIlIIl1lilllIIll = IIilllII11IiiIilI11[5] else Ii1IIlIIl1lilllIIll = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] end if IIilllII11IiiIilI11[1] then lIl1i1illIli11Iii11II = IIilllII11IiiIilI11[10] else lIl1i1illIli11Iii11II = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[6]] end if Ii1IIlIIl1lilllIIll == lIl1i1illIli11Iii11II ~= (IIilllII11IiiIilI11[8] ~= 0) then iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 end else Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = II11Ili11llliil1Iii[IIilllII11IiiIilI11[3]] end elseif liIiii11I11lI11llIi < 15 then if liIiii11I11lI11llIi < 13 then local lIl1i1illIli11Iii11II if IIilllII11IiiIilI11[1] then lIl1i1illIli11Iii11II = IIilllII11IiiIilI11[10] else lIl1i1illIli11Iii11II = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[6]] end Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]][lIl1i1illIli11Iii11II] elseif liIiii11I11lI11llIi == 14 then for lIli11lliiili1li1Illl = IIilllII11IiiIilI11[8], IIilllII11IiiIilI11[4] do Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] = nil end elseif IIilllII11IiiIilI11[6] == 196 then iIl1IliililII1liI11 = iIl1IliililII1liI11 - 1 lIIilIIiiiIiii11Ii1[iIl1IliililII1liI11] = { [2] = 14, [8] = (IIilllII11IiiIilI11[8] - 18) % 256, [4] = (IIilllII11IiiIilI11[4] - 18) % 256 } else lIllI1ill11IIllIli1Il[IIilllII11IiiIilI11[4]] = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] end elseif liIiii11I11lI11llIi >= 16 then if liIiii11I11lI11llIi == 17 then Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = { lIl11Iil1IllI1i1ii1I1(lIlliiiliI1I1IIlIllI1, 1, IIilllII11IiiIilI11[4] == 0 and 255 or IIilllII11IiiIilI11[4]) } else local l1iIiIiIii1iIll1Ili = Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[4]] for lIli11lliiili1li1Illl = IIilllII11IiiIilI11[4] + 1, IIilllII11IiiIilI11[6] do l1iIiIiIii1iIll1Ili = l1iIiIiIii1iIll1Ili .. Iiiilil1I1iIi1IIl1l[lIli11lliiili1li1Illl] end Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = l1iIiIiIii1iIll1Ili end else Iiiilil1I1iIi1IIl1l[IIilllII11IiiIilI11[8]] = IIilllII11IiiIilI11[4] ~= 0 if IIilllII11IiiIilI11[6] ~= 0 then iIl1IliililII1liI11 = iIl1IliililII1liI11 + 1 end end end end local iIIiI11IIl1IllilIiI, IiIiIi11I11illil11i, lIlI1lIiil1I1lii1IlIl, iliI11lIIl1iiIII1iI = liIIIlllII1lI11l11l(lIl1iliIIi11l1IiiI1I1) if iIIiI11IIl1IllilIiI then if lIlI1lIiil1I1lii1IlIl then return lIl11Iil1IllI1i1ii1I1(Iiiilil1I1iIi1IIl1l, lIlI1lIiil1I1lii1IlIl, iliI11lIIl1iiIII1iI) end else I1lIliiIli1il1IiI1l("Luraph Script:" .. (lIli1Il111Il1lI1il1li[iIl1IliililII1liI11 - 1] or "") .. ": " .. l11IIiiillIli1i1IIl(IiIiIi11I11illil11i), 0) end end I1IiIi1IlIllilIIIll(lIii1IlI1iIi11lIill, II11Ili11llliil1Iii) return lIii1IlI1iIi11lIill end local IiiIlllii1i111II1ii = lIIil1II1liiliii1ii() return lIl1illlilliIiI1iI111(IiiIlllii1i111II1ii, II11Ili11llliil1Iii)() end lIlliI11lii1IlliI1IIi("LPH!", illIl11lIli1I11Ill1()) 