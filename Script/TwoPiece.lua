local I1IIIill1Iil1i1l11l = assert local ii1l11IlliII1iIi1ll = select local lIlll1IIll111i1lllIli = tonumber local iiIlil11iIl1li11lI1 = unpack local Ill11IIii1iiiIiilll = pcall local llIl1I1l11IIIl111Il = setfenv local lIIiII1Ii1liIi1i1il = setmetatable local IliIIIllIiIliiI1lIi = type local iIlii1IiiiliilIiiIi = getfenv local lIll1lIII1Illi1Il1lIl = tostring local IiiII1II1liiIIiIi1i = error local IIl1ililIIlIl1ilill = string.sub local lIliiIlI11lill1lI1ll1 = string.byte local lilII1iilIiIiiIlllI = string.char local I1iiII1lIli11iil1I1 = string.rep local IiiII1IiIli1liIliIi = string.gsub local iliIlil1iII111i1IiI = string.match local lIlIilil1Ii1lII1IiIll = table.insert local I1ii11lll1IliiliIlI = lIliiIlI11lill1lI1ll1(" ", 1) local iiiilII11lIIliil1II, IiIIlilii1I1Iiii11i = #{309}, #{ 5546, 4805, 1240, 5475, 135, 682, 6816, 5604, 1153, 2156, 4245, 5426, 3248, 4552, 792, 2099, 3120, 1367, 4344, 6458, 617, 6907, 3772, 3039 } + I1ii11lll1IliiliIlI + 131015 local ill1l11I1i1lilllIII = {} local il1IIlIlIIll11Ii1ll = 1 local lIlli1ll1liIIl1Iil11I, lIllII1iII111liliIIlI local function Iliillil1lI11IIll1l(I1I1111ii1illIl1i1i, iiIiIiIIIli11l1I11I) local i11ll11Il1l1Il111iI I1I1111ii1illIl1i1i = IiiII1IiIli1liIliIi(IIl1ililIIlIl1ilill(I1I1111ii1illIl1i1i, 5), "..", function(lIlIiiiilIliIiIiIIilI) if lIliiIlI11lill1lI1ll1(lIlIiiiilIliIiIiIIilI, 2) == 72 then i11ll11Il1l1Il111iI = lIlll1IIll111i1lllIli(IIl1ililIIlIl1ilill(lIlIiiiilIliIiIiIIilI, 1, 1)) return "" else local lllllIIiilliI1iliI1 = lilII1iilIiIiiIlllI(lIlll1IIll111i1lllIli(lIlIiiiilIliIiIiIIilI, 16)) if i11ll11Il1l1Il111iI then local IIIilllIi1iil1IIiiI = I1iiII1lIli11iil1I1(lllllIIiilliI1iliI1, i11ll11Il1l1Il111iI) i11ll11Il1l1Il111iI = nil return IIIilllIi1iil1IIiiI else return lllllIIiilliI1iliI1 end end end) local function iiliI1IililiIiiilll() local lIllii1iii1l1ilil111I = lIliiIlI11lill1lI1ll1(I1I1111ii1illIl1i1i, il1IIlIlIIll11Ii1ll, il1IIlIlIIll11Ii1ll) il1IIlIlIIll11Ii1ll = il1IIlIlIIll11Ii1ll + 1 return lIllii1iii1l1ilil111I end local function IiiIIii1li1IlII1il1() local lIllii1iii1l1ilil111I, lllllIIiilliI1iliI1, IIIilllIi1iil1IIiiI, lIlIlillIilIIi11IlI11 = lIliiIlI11lill1lI1ll1(I1I1111ii1illIl1i1i, il1IIlIlIIll11Ii1ll, il1IIlIlIIll11Ii1ll + 3) il1IIlIlIIll11Ii1ll = il1IIlIlIIll11Ii1ll + 4 return lIlIlillIilIIi11IlI11 * 16777216 + IIIilllIi1iil1IIiiI * 65536 + lllllIIiilliI1iliI1 * 256 + lIllii1iii1l1ilil111I end local function lii1ilI1l1111IlIli1(lIl1i1I1i1i1IIl1lIl1i, lIlI1Illll1IIIl1i1ilI, ll11iili11ii1iiiiIl) if ll11iili11ii1iiiiIl then local lIlilIl11illlllIiiil1, lllIlIIiiIi11llIlli = 0, 0 for iI1IiilIi1iill1lllI = lIlI1Illll1IIIl1i1ilI, ll11iili11ii1iiiiIl do lIlilIl11illlllIiiil1 = lIlilIl11illlllIiiil1 + 2 ^ lllIlIIiiIi11llIlli * lii1ilI1l1111IlIli1(lIl1i1I1i1i1IIl1lIl1i, iI1IiilIi1iill1lllI) lllIlIIiiIi11llIlli = lllIlIIiiIi11llIlli + 1 end return lIlilIl11illlllIiiil1 else local Iili1il11ili111II1l = 2 ^ (lIlI1Illll1IIIl1i1ilI - 1) return Iili1il11ili111II1l <= lIl1i1I1i1i1IIl1lIl1i % (Iili1il11ili111II1l + Iili1il11ili111II1l) and 1 or 0 end end local function iIlIIli11il1liI11I1() local lIllii1iii1l1ilil111I, lllllIIiilliI1iliI1 = IiiIIii1li1IlII1il1(), IiiIIii1li1IlII1il1() if lIllii1iii1l1ilil111I == 0 and lllllIIiilliI1iliI1 == 0 then return 0 end return (-2 * lii1ilI1l1111IlIli1(lllllIIiilliI1iliI1, 32) + 1) * 2 ^ (lii1ilI1l1111IlIli1(lllllIIiilliI1iliI1, 21, 31) - 1023) * ((lii1ilI1l1111IlIli1(lllllIIiilliI1iliI1, 1, 20) * 4294967296 + lIllii1iii1l1ilil111I) / 4503599627370496 + 1) end local lIli1IIliIIii11ilIIll = bit or bit32 local il1il1iI11l1l111111 = lIli1IIliIIii11ilIIll and lIli1IIliIIii11ilIIll.bxor or function(lIllii1iii1l1ilil111I, lllllIIiilliI1iliI1) local Il1Ii1iIill11Iil11l = 1 local IIIilllIi1iil1IIiiI = 0 while lIllii1iii1l1ilil111I > 0 and lllllIIiilliI1iliI1 > 0 do local lIlIiI11iil1I11l1iiii = lIllii1iii1l1ilil111I % 2 local iIl1lI11llIIlliIIi1 = lllllIIiilliI1iliI1 % 2 if lIlIiI11iil1I11l1iiii ~= iIl1lI11llIIlliIIi1 then IIIilllIi1iil1IIiiI = IIIilllIi1iil1IIiiI + Il1Ii1iIill11Iil11l end lIllii1iii1l1ilil111I = (lIllii1iii1l1ilil111I - lIlIiI11iil1I11l1iiii) / 2 lllllIIiilliI1iliI1 = (lllllIIiilliI1iliI1 - iIl1lI11llIIlliIIi1) / 2 Il1Ii1iIill11Iil11l = Il1Ii1iIill11Iil11l * 2 end if lIllii1iii1l1ilil111I < lllllIIiilliI1iliI1 then lIllii1iii1l1ilil111I = lllllIIiilliI1iliI1 end while lIllii1iii1l1ilil111I > 0 do local lIlIiI11iil1I11l1iiii = lIllii1iii1l1ilil111I % 2 if lIlIiI11iil1I11l1iiii > 0 then IIIilllIi1iil1IIiiI = IIIilllIi1iil1IIiiI + Il1Ii1iIill11Iil11l end lIllii1iii1l1ilil111I = (lIllii1iii1l1ilil111I - lIlIiI11iil1I11l1iiii) / 2 Il1Ii1iIill11Iil11l = Il1Ii1iIill11Iil11l * 2 end return IIIilllIi1iil1IIiiI end local function l11lIlI1IIl11ilI1Ii(il1i1ii11I11l11111I) local lIl1Il1il1l1IIliIi1il = { lIliiIlI11lill1lI1ll1(I1I1111ii1illIl1i1i, il1IIlIlIIll11Ii1ll, il1IIlIlIIll11Ii1ll + 3) } il1IIlIlIIll11Ii1ll = il1IIlIlIIll11Ii1ll + 4 local lIllii1iii1l1ilil111I = il1il1iI11l1l111111(lIl1Il1il1l1IIliIi1il[1], lIllII1iII111liliIIlI) local lllllIIiilliI1iliI1 = il1il1iI11l1l111111(lIl1Il1il1l1IIliIi1il[2], lIllII1iII111liliIIlI) local IIIilllIi1iil1IIiiI = il1il1iI11l1l111111(lIl1Il1il1l1IIliIi1il[3], lIllII1iII111liliIIlI) local lIlIlillIilIIi11IlI11 = il1il1iI11l1l111111(lIl1Il1il1l1IIliIi1il[4], lIllII1iII111liliIIlI) lIllII1iII111liliIIlI = (217 * lIllII1iII111liliIIlI + il1i1ii11I11l11111I) % 256 return lIlIlillIilIIi11IlI11 * 16777216 + IIIilllIi1iil1IIiiI * 65536 + lllllIIiilliI1iliI1 * 256 + lIllii1iii1l1ilil111I end local function l1llI1lillIi1I1i1I1(l1iIilII1iiIill1lIl) local Il1llI111I1l1Ilii1I = IiiIIii1li1IlII1il1() local Ilililll11lll1ii111 = "" for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, Il1llI111I1l1Ilii1I do Ilililll11lll1ii111 = Ilililll11lll1ii111 .. lilII1iilIiIiiIlllI(il1il1iI11l1l111111(lIliiIlI11lill1lI1ll1(I1I1111ii1illIl1i1i, il1IIlIlIIll11Ii1ll + iI1IiilIi1iill1lllI - 1), lIlli1ll1liIIl1Iil11I)) lIlli1ll1liIIl1Iil11I = (l1iIilII1iiIill1lIl * lIlli1ll1liIIl1Iil11I + 235) % 256 end il1IIlIlIIll11Ii1ll = il1IIlIlIIll11Ii1ll + Il1llI111I1l1Ilii1I return Ilililll11lll1ii111 end lIlli1ll1liIIl1Iil11I = iiliI1IililiIiiilll() lIllII1iII111liliIIlI = iiliI1IililiIiiilll() local lIl1llliiili1lIli1liI = {} for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, iiliI1IililiIiiilll() do local iill1il1IiIl11IIlIl = iiliI1IililiIiiilll() local Ill111IiI11iIllilIi = (iI1IiilIi1iill1lllI - 1) * 2 lIl1llliiili1lIli1liI[Ill111IiI11iIllilIi] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, 1, 4) lIl1llliiili1lIli1liI[Ill111IiI11iIllilIi + 1] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, 5, 8) end local function IliII1IIlIlllIiliIl() local lIlliIillllllliI1liI1 = { nil, {}, {}, {}, nil, {}, nil } IiiIIii1li1IlII1il1() iiliI1IililiIiiilll() IiiIIii1li1IlII1il1() IiiIIii1li1IlII1il1() lIlliIillllllliI1liI1[1] = iiliI1IililiIiiilll() local ili1IliiIilIIlIIi11 = IiiIIii1li1IlII1il1() - (#{ 6502, 5194, 294, 4303, 3800, 3287, 3662, 5005, 4444, 0, 5622, 1443, 3128, 6694, 5812, 6372, 2874, 3135, 4570, 6731, 1198, 1879 } + I1ii11lll1IliiliIlI + 133706) local lIlIiIill1IiliIi111ll = iiliI1IililiIiiilll() for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, ili1IliiIilIIlIIi11 do local lillilIIIlIlili11I1 local IliIIIllIiIliiI1lIi = iiliI1IililiIiiilll() if IliIIIllIiIliiI1lIi == #{ 5093, 6699, 6722, 3062, 2021, 1236, 4742, 765, 3210, 5733, 5394 } then lillilIIIlIlili11I1 = IIl1ililIIlIl1ilill(l1llI1lillIi1I1i1I1(#{ 507, 5874, 2615, 6711, 4582, 1926, 2461, 1758, 6252, 1636, 2932, 317, 2142, 4091, 4647, 869, 3062, 5641, 6196, 2068, 5972, 2184 } + I1ii11lll1IliiliIlI + 66), #{495}) end if IliIIIllIiIliiI1lIi == #{ 2327, 1857, 439, 5834, 4970, 1621, 4752, 1993, 3349, 2116, 1323, 1828, 5719, 6131, 3013, 2431, 4785, 2863, 6949, 960 } + I1ii11lll1IliiliIlI + 139 then lillilIIIlIlili11I1 = IiiIIii1li1IlII1il1() end if IliIIIllIiIliiI1lIi == #{ 344, 4135, 4956, 1515, 6284, 12, 6482, 5287, 4950, 2033, 1005, 6787, 1519, 1975, 1469, 3697, 5189, 4371, 1373, 90, 1673, 3737, 4462 } + I1ii11lll1IliiliIlI + -23 then lillilIIIlIlili11I1 = iIlIIli11il1liI11I1() end if IliIIIllIiIliiI1lIi == #{ 131, 5988, 1600, 2551, 1032, 1753, 5166, 6082, 2025, 6766, 4486, 2953, 5952, 6656, 5521, 4073, 3397, 5246, 1305, 1545, 21 } + I1ii11lll1IliiliIlI + 23 then lillilIIIlIlili11I1 = #{ 3862, 6074, 6354, 5581, 2389, 6872, 4563, 2006, 5592, 6082, 4420, 5886, 4974, 5992, 4426, 4948, 3424, 5058, 6222, 4055, 4994 } + I1ii11lll1IliiliIlI + 115369 == #{ 3862, 6074, 6354, 5581, 2389, 6872, 4563, 2006, 5592, 6082, 4420, 5886, 4974, 5992, 4426, 4948, 3424, 5058, 6222, 4055, 4994 } + I1ii11lll1IliiliIlI + 115369 end if IliIIIllIiIliiI1lIi == #{ 837, 3433, 5466, 6543, 6716, 2473, 1531, 1912, 1852, 2424, 6150, 3444, 1361, 5137, 5852, 3939, 2101, 1195, 600, 5692, 3191, 2807 } + I1ii11lll1IliiliIlI + 130 then lillilIIIlIlili11I1 = #{ 3760, 5706, 2366, 545, 2253, 1410, 2836, 6402, 4252, 805, 4267, 3302, 5128, 3833, 796, 5707, 3529, 1729, 3390, 3885, 738 } + I1ii11lll1IliiliIlI + 12756 == #{ 624, 147, 4706, 6006, 6950, 5158, 976, 1451, 4038, 1813, 3043, 6960, 3219, 2392, 2275, 5214, 3500, 6941, 5606, 6675, 704, 6161, 3590, 5717 } + I1ii11lll1IliiliIlI + 85144 end if IliIIIllIiIliiI1lIi == #{ 5510, 2352, 11, 411, 5557, 2860, 85, 272, 3859, 5492, 5129, 3216, 4695, 5637, 704, 5857, 3640, 1450, 2811, 2908, 4127, 2803, 2205, 3515 } + I1ii11lll1IliiliIlI + 111 then lillilIIIlIlili11I1 = IIl1ililIIlIl1ilill(l1llI1lillIi1I1i1I1(insEncKey), #{ 5938, 1320, 5453 }) end if IliIIIllIiIliiI1lIi == #{ 4903, 6149, 5755, 1548, 4929, 2914, 301, 6703, 2806, 6393, 2315, 731, 4502, 2243, 4359, 462, 367, 5730, 6017, 6529, 4595, 6534, 4124 } + I1ii11lll1IliiliIlI + 48 then lillilIIIlIlili11I1 = IIl1ililIIlIl1ilill(l1llI1lillIi1I1i1I1(lIlIiIill1IiliIi111ll), #{6085}) end if IliIIIllIiIliiI1lIi == #{ 3777, 4181, 1364, 4337, 4604, 6092, 4244, 2085, 1365, 6886, 1920, 1446, 1876, 3438, 5188, 439, 713, 5896, 1661, 5034 } + I1ii11lll1IliiliIlI + 125 then lillilIIIlIlili11I1 = IIl1ililIIlIl1ilill(l1llI1lillIi1I1i1I1(lIlIiIill1IiliIi111ll), #{6085}) end if IliIIIllIiIliiI1lIi == #{ 3555, 1979, 4052, 6878, 1754, 4146, 3259, 5680, 336, 5791, 2708, 2873, 3793, 3280, 5145, 4699, 3144, 6178, 834, 221, 2770, 6760, 372 } + I1ii11lll1IliiliIlI + 192 then lillilIIIlIlili11I1 = IIl1ililIIlIl1ilill(l1llI1lillIi1I1i1I1(lIlIiIill1IiliIi111ll), #{ 3023, 5096, 1767, 675 }) end lIlliIillllllliI1liI1[3][iI1IiilIi1iill1lllI - iiiilII11lIIliil1II] = lillilIIIlIlili11I1 end lIlliIillllllliI1liI1[7] = iiliI1IililiIiiilll() local ili1IliiIilIIlIIi11 = IiiIIii1li1IlII1il1() for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, ili1IliiIilIIlIIi11 do lIlliIillllllliI1liI1[6][iI1IiilIi1iill1lllI - iiiilII11lIIliil1II] = IliII1IIlIlllIiliIl() end local ili1IliiIilIIlIIi11 = IiiIIii1li1IlII1il1() for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, ili1IliiIilIIlIIi11 do lIlliIillllllliI1liI1[4][iI1IiilIi1iill1lllI] = IiiIIii1li1IlII1il1() end iiliI1IililiIiiilll() iiliI1IililiIiiilll() local illiiilI11IlIlIi1Il = IiiIIii1li1IlII1il1() - (#{ 1032, 5049, 2042, 1289, 637, 2393, 5692, 5881, 3557, 1669, 1891, 1872, 5229, 854, 1712, 2977, 6712, 541, 6653, 6829, 789, 3337, 307, 2490 } + I1ii11lll1IliiliIlI + 133716) local li1ilIil1lillIl1Ii1 = iiliI1IililiIiiilll() for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, illiiilI11IlIlIi1Il do local IllliIlilllIIiI11l1 = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local iill1il1IiIl11IIlIl = l11lIlI1IIl11ilI1Ii(li1ilIil1lillIl1Ii1) IllliIlilllIIiI11l1[9] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, #{ 2029, 6425, 2777, 5365, 297, 4589, 1395, 2926, 2260, 6377, 4909, 4109, 199, 4819, 4623, 6087, 2678, 5025, 1833 }, #{ 2560, 6159, 6158, 1266, 1804, 4918, 149, 6657, 6277, 5999, 5894, 5073, 312, 6376, 4787, 838, 3053, 6706, 5644, 2315 } + I1ii11lll1IliiliIlI + -26) IllliIlilllIIiI11l1[3] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, #{ 5796, 236, 5602, 6582, 1454, 945, 625, 155, 3545, 2393 }, #{ 2656, 2903, 3460, 1197, 1613, 4330, 5514, 1102, 6555, 4734, 4864, 6833, 486, 5132, 5298, 5304, 3531, 2539 }) IllliIlilllIIiI11l1[8] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, #{6942}, #{ 6739, 2183, 492, 2643, 3675, 948, 4310, 4420, 6687 }) IllliIlilllIIiI11l1[7] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, #{4151}, #{ 4690, 5453, 1819, 1717, 3956, 315, 163, 2550, 3678, 2451, 4232, 6917, 4628, 5338, 592, 658, 5469, 6722 }) IllliIlilllIIiI11l1[2] = lii1ilI1l1111IlIli1(iill1il1IiIl11IIlIl, #{ 2211, 4892, 2709, 5991, 1821, 1710, 298, 2204, 1637, 534, 4176, 3589, 2685, 2625, 4169, 3573, 4102, 5771, 1155, 3434, 5488, 5053, 3519, 1729 } + I1ii11lll1IliiliIlI + -29, #{ 1860, 68, 387, 671, 4747, 1938, 415, 648, 4759, 5386, 4430, 1007, 4979, 3518, 3185, 3332, 5349, 2251, 806, 4225, 3900 } + I1ii11lll1IliiliIlI + -21) lIlliIillllllliI1liI1[2][iI1IiilIi1iill1lllI] = IllliIlilllIIiI11l1 end for iI1IiilIi1iill1lllI = iiiilII11lIIliil1II, illiiilI11IlIlIi1Il do local IllliIlilllIIiI11l1 = lIlliIillllllliI1liI1[2][iI1IiilIi1iill1lllI] local iI1lill1llIii11IIii = lIl1llliiili1lIli1liI[IllliIlilllIIiI11l1[2]] if iI1lill1llIii11IIii == #{2677} and IllliIlilllIIiI11l1[8] > 255 then IllliIlilllIIiI11l1[1] = true IllliIlilllIIiI11l1[10] = lIlliIillllllliI1liI1[3][IllliIlilllIIiI11l1[8] - 256] end if iI1lill1llIii11IIii == #{ 293, 4107, 5729, 2772 } then IllliIlilllIIiI11l1[4] = lIlliIillllllliI1liI1[3][IllliIlilllIIiI11l1[7]] end if iI1lill1llIii11IIii == #{2924, 5016} and IllliIlilllIIiI11l1[3] > 255 then IllliIlilllIIiI11l1[5] = true IllliIlilllIIiI11l1[6] = lIlliIillllllliI1liI1[3][IllliIlilllIIiI11l1[3] - 256] end if iI1lill1llIii11IIii == #{ 4976, 6700, 3861 } then if IllliIlilllIIiI11l1[8] > 255 then IllliIlilllIIiI11l1[1] = true IllliIlilllIIiI11l1[10] = lIlliIillllllliI1liI1[3][IllliIlilllIIiI11l1[8] - 256] end if IllliIlilllIIiI11l1[3] > 255 then IllliIlilllIIiI11l1[5] = true IllliIlilllIIiI11l1[6] = lIlliIillllllliI1liI1[3][IllliIlilllIIiI11l1[3] - 256] end end end lIlliIillllllliI1liI1[5] = iiliI1IililiIiiilll() return lIlliIillllllliI1liI1 end local function i11Il111iiIiilIIlIl(lIlliIillllllliI1liI1, iiIiIiIIIli11l1I11I, iiil1iIi1i1Illiil1l) local ilIiiIliiIiiilIii1I, lIll1I11i1illi1Il1II1 = 17, 14 local lIliIIiliii1ili1IiilI = lIlliIillllllliI1liI1[2] local liI1i1iiliii1Ii11Il = 5 local Ii1IIIi1l11lIiii11l = lIlliIillllllliI1liI1[6] local lIiiliIi1l1IIil1lI1 = lIlliIillllllliI1liI1[7] local lIllIiililI1lIilI1IlI = lIlliIillllllliI1liI1[1] local lIlIliIillIii1llIll1l = 2 local iliIlI1il1iiillIIiI = lIlliIillllllliI1liI1[4] local liI1IiIIll1iIIIiil1 = 8 local function lIlIi1ili1111l11iil1i(...) local Ii1Il1iI111lI1Ilili = 0 local IllI1il1Illl1iIlilI = { iiIlil11iIl1li11lI1({}, 1, lIllIiililI1lIilI1IlI) } local lI1IiIiillIlil1iiIl = 1 local l1i1iiiilIlli1l1II1 = {} local lIlilIIli1lII1l11ili1 = {} local iiIiIiIIIli11l1I11I = iIlii1IiiiliilIiiIi() local lIli1llili1II1llliIII = { ... } local iiilIiI1I1Ili1Ii1i1 = #lIli1llili1II1llliIII - 1 for iI1IiilIi1iill1lllI = 0, iiilIiI1I1Ili1Ii1i1 do if iI1IiilIi1iill1lllI < lIiiliIi1l1IIil1lI1 then IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = lIli1llili1II1llliIII[iI1IiilIi1iill1lllI + 1] end end local function lIIII1lI1l1lIIl1iil(...) local IIIilllIi1iil1IIiiI = ii1l11IlliII1iIi1ll("#", ...) local iliIllI1IillllIill1 = { ... } return IIIilllIi1iil1IIiiI, iliIllI1IillllIill1 end local function lIl11iilili1lil1i1ll1() while true do local llil1l1l111iI1ii1iI = lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] local lIl1I1l1Ii11ilI1I11lI = llil1l1l111iI1ii1iI[2] lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 if lIl1I1l1Ii11ilI1I11lI >= 13 then if lIl1I1l1Ii11ilI1I11lI < 19 then if lIl1I1l1Ii11ilI1I11lI < 16 then if lIl1I1l1Ii11ilI1I11lI < 14 then local IIIilllIi1iil1IIiiI if llil1l1l111iI1ii1iI[5] then IIIilllIi1iil1IIiiI = llil1l1l111iI1ii1iI[6] else IIIilllIi1iil1IIiiI = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[3]] end IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]][IIIilllIi1iil1IIiiI] elseif lIl1I1l1Ii11ilI1I11lI == 15 then local lllllIIiilliI1iliI1, IIIilllIi1iil1IIiiI if llil1l1l111iI1ii1iI[1] then lllllIIiilliI1iliI1 = llil1l1l111iI1ii1iI[10] else lllllIIiilliI1iliI1 = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end if llil1l1l111iI1ii1iI[5] then IIIilllIi1iil1IIiiI = llil1l1l111iI1ii1iI[6] else IIIilllIi1iil1IIiiI = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[3]] end IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = lllllIIiilliI1iliI1 * IIIilllIi1iil1IIiiI elseif llil1l1l111iI1ii1iI[3] == 120 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 4, [9] = (llil1l1l111iI1ii1iI[9] - 37) % 256, [8] = (llil1l1l111iI1ii1iI[8] - 37) % 256 } else IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = iiil1iIi1i1Illiil1l[llil1l1l111iI1ii1iI[8]] end elseif lIl1I1l1Ii11ilI1I11lI >= 17 then if lIl1I1l1Ii11ilI1I11lI == 18 then local Ill111IiI11iIllilIi = (llil1l1l111iI1ii1iI[3] - 1) * 50 local IiIi1i1iIlIiIIllIlI = llil1l1l111iI1ii1iI[8] if IiIi1i1iIlIiIIllIlI == 0 then IiIi1i1iIlIiIIllIlI = Ii1Il1iI111lI1Ilili - llil1l1l111iI1ii1iI[9] end for iI1IiilIi1iill1lllI = 1, IiIi1i1iIlIiIIllIlI do IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]][Ill111IiI11iIllilIi + iI1IiilIi1iill1lllI] = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9] + iI1IiilIi1iill1lllI] end elseif llil1l1l111iI1ii1iI[3] == 243 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 23, [9] = (llil1l1l111iI1ii1iI[9] - 63) % 256, [8] = (llil1l1l111iI1ii1iI[8] - 63) % 256 } else IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end else local IiIlll1iI1I11liIlll = llil1l1l111iI1ii1iI[9] local lIli1llili1II1llliIII = llil1l1l111iI1ii1iI[8] local IillIi1lii11iiiIi1i = llil1l1l111iI1ii1iI[3] local lIlilili1l11illIllI, iliI1li11iI1llliIii, lIl11iilili1lil1i1ll1 if lIli1llili1II1llliIII ~= 1 then if lIli1llili1II1llliIII ~= 0 then iliI1li11iI1llliIii = IiIlll1iI1I11liIlll + lIli1llili1II1llliIII - 1 else iliI1li11iI1llliIii = Ii1Il1iI111lI1Ilili end iliI1li11iI1llliIii, lIlilili1l11illIllI = lIIII1lI1l1lIIl1iil(IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll](iiIlil11iIl1li11lI1(IllI1il1Illl1iIlilI, IiIlll1iI1I11liIlll + 1, iliI1li11iI1llliIii))) else iliI1li11iI1llliIii, lIlilili1l11illIllI = lIIII1lI1l1lIIl1iil(IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll]()) end if IillIi1lii11iiiIi1i ~= 1 then if IillIi1lii11iiiIi1i ~= 0 then iliI1li11iI1llliIii = IiIlll1iI1I11liIlll + IillIi1lii11iiiIi1i - 2 Ii1Il1iI111lI1Ilili = iliI1li11iI1llliIii + 1 else iliI1li11iI1llliIii = iliI1li11iI1llliIii + IiIlll1iI1I11liIlll - 1 Ii1Il1iI111lI1Ilili = iliI1li11iI1llliIii end lIl11iilili1lil1i1ll1 = 0 for iI1IiilIi1iill1lllI = IiIlll1iI1I11liIlll, iliI1li11iI1llliIii do lIl11iilili1lil1i1ll1 = lIl11iilili1lil1i1ll1 + 1 IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = lIlilili1l11illIllI[lIl11iilili1lil1i1ll1] end else Ii1Il1iI111lI1Ilili = IiIlll1iI1I11liIlll - 1 end for iI1IiilIi1iill1lllI = Ii1Il1iI111lI1Ilili + 1, lIllIiililI1lIilI1IlI do IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = nil end end elseif lIl1I1l1Ii11ilI1I11lI < 22 then if lIl1I1l1Ii11ilI1I11lI < 20 then if llil1l1l111iI1ii1iI[3] == 90 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 1, [9] = (llil1l1l111iI1ii1iI[9] - 73) % 256, [3] = (llil1l1l111iI1ii1iI[8] - 73) % 256 } else IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = -IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end elseif lIl1I1l1Ii11ilI1I11lI == 21 then IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = llil1l1l111iI1ii1iI[4] else lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + (llil1l1l111iI1ii1iI[7] - IiIIlilii1I1Iiii11i) end elseif lIl1I1l1Ii11ilI1I11lI < 24 then if lIl1I1l1Ii11ilI1I11lI ~= 23 then IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = { iiIlil11iIl1li11lI1(ill1l11I1i1lilllIII, 1, llil1l1l111iI1ii1iI[8] == 0 and 255 or llil1l1l111iI1ii1iI[8]) } elseif llil1l1l111iI1ii1iI[3] == 19 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 14, [9] = (llil1l1l111iI1ii1iI[9] - 169) % 256, [8] = (llil1l1l111iI1ii1iI[8] - 169) % 256 } else for iI1IiilIi1iill1lllI = llil1l1l111iI1ii1iI[9], llil1l1l111iI1ii1iI[8] do IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = nil end end elseif lIl1I1l1Ii11ilI1I11lI ~= 25 then iiIiIiIIIli11l1I11I[llil1l1l111iI1ii1iI[4]] = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] else local lllllIIiilliI1iliI1, IIIilllIi1iil1IIiiI if llil1l1l111iI1ii1iI[1] then lllllIIiilliI1iliI1 = llil1l1l111iI1ii1iI[10] else lllllIIiilliI1iliI1 = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end if llil1l1l111iI1ii1iI[5] then IIIilllIi1iil1IIiiI = llil1l1l111iI1ii1iI[6] else IIIilllIi1iil1IIiiI = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[3]] end if lllllIIiilliI1iliI1 == IIIilllIi1iil1IIiiI ~= (llil1l1l111iI1ii1iI[9] ~= 0) then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 end end elseif lIl1I1l1Ii11ilI1I11lI < 6 then if lIl1I1l1Ii11ilI1I11lI < 3 then if lIl1I1l1Ii11ilI1I11lI >= 1 then if lIl1I1l1Ii11ilI1I11lI == 2 then local lIlliil1IiIIiliI1III1 = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] for iI1IiilIi1iill1lllI = llil1l1l111iI1ii1iI[8] + 1, llil1l1l111iI1ii1iI[3] do lIlliil1IiIIiliI1III1 = lIlliil1IiIIiliI1III1 .. IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] end IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = lIlliil1IiIIiliI1III1 else local IiIlll1iI1I11liIlll = llil1l1l111iI1ii1iI[9] local Ill111IiI11iIllilIi = IiIlll1iI1I11liIlll + 2 local lIlliil1IiIIiliI1III1 = { IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll](IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll + 1], IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll + 2]) } for iI1IiilIi1iill1lllI = 1, llil1l1l111iI1ii1iI[3] do IllI1il1Illl1iIlilI[Ill111IiI11iIllilIi + iI1IiilIi1iill1lllI] = lIlliil1IiIIiliI1III1[iI1IiilIi1iill1lllI] end if IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll + 3] ~= nil then IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll + 2] = IllI1il1Illl1iIlilI[IiIlll1iI1I11liIlll + 3] else lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 end end elseif not not IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] == (llil1l1l111iI1ii1iI[3] == 0) then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 end elseif lIl1I1l1Ii11ilI1I11lI < 4 then local l1l1ii11I11Il1iIIl1 = Ii1IIIi1l11lIiii11l[llil1l1l111iI1ii1iI[7]] local l11Ii1ll1IIllli1lII = {} if l1l1ii11I11Il1iIIl1[liI1i1iiliii1Ii11Il] > 0 then do local III1lilllI11i11ll1I = {} l11Ii1ll1IIllli1lII = lIIiII1Ii1liIi1i1il({}, { __index = function(iliIllI1IillllIill1, lIllilil11lill1liiI11) local i1Ii1iiliilllillill = III1lilllI11i11ll1I[lIllilil11lill1liiI11] return i1Ii1iiliilllillill[1][i1Ii1iiliilllillill[2]] end, __newindex = function(iliIllI1IillllIill1, lIllilil11lill1liiI11, il1l1IiiiIIi1ilI1l1) local i1Ii1iiliilllillill = III1lilllI11i11ll1I[lIllilil11lill1liiI11] i1Ii1iiliilllillill[1][i1Ii1iiliilllillill[2]] = il1l1IiiiIIi1ilI1l1 end }) for iI1IiilIi1iill1lllI = 1, l1l1ii11I11Il1iIIl1[liI1i1iiliii1Ii11Il] do local I1l1l1iiiII1l1i111I = lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] if I1l1l1iiiII1l1i111I[lIlIliIillIii1llIll1l] == ilIiiIliiIiiilIii1I then III1lilllI11i11ll1I[iI1IiilIi1iill1lllI - 1] = { IllI1il1Illl1iIlilI, I1l1l1iiiII1l1i111I[liI1IiIIll1iIIIiil1] } elseif I1l1l1iiiII1l1i111I[lIlIliIillIii1llIll1l] == lIll1I11i1illi1Il1II1 then III1lilllI11i11ll1I[iI1IiilIi1iill1lllI - 1] = { iiil1iIi1i1Illiil1l, I1l1l1iiiII1l1i111I[liI1IiIIll1iIIIiil1] } end lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 end if not l1i1iiiilIlli1l1II1[IllI1il1Illl1iIlilI] then l1i1iiiilIlli1l1II1[IllI1il1Illl1iIlilI] = {III1lilllI11i11ll1I} else lIlIilil1Ii1lII1IiIll(l1i1iiiilIlli1l1II1[IllI1il1Illl1iIlilI], III1lilllI11i11ll1I) end end end local III1IIilliI11lll11I = i11Il111iiIiilIIlIl(l1l1ii11I11Il1iIIl1, iiIiIiIIIli11l1I11I, l11Ii1ll1IIllli1lII) IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = III1IIilliI11lll11I elseif lIl1I1l1Ii11ilI1I11lI ~= 5 then l1i1iiiilIlli1l1II1[IllI1il1Illl1iIlilI] = nil local IiIlll1iI1I11liIlll = llil1l1l111iI1ii1iI[9] local I1illilIiIIlIl1iIll = llil1l1l111iI1ii1iI[8] if I1illilIiIIlIl1iIll == 1 then return true end local iliI1li11iI1llliIii = IiIlll1iI1I11liIlll + I1illilIiIIlIl1iIll - 2 if I1illilIiIIlIl1iIll == 0 then iliI1li11iI1llliIii = Ii1Il1iI111lI1Ilili end return true, IiIlll1iI1I11liIlll, iliI1li11iI1llliIii elseif llil1l1l111iI1ii1iI[3] == 48 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 0, [9] = (llil1l1l111iI1ii1iI[9] - 128) % 256, [3] = (llil1l1l111iI1ii1iI[8] - 128) % 256 } else IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = not IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end elseif lIl1I1l1Ii11ilI1I11lI < 9 then if lIl1I1l1Ii11ilI1I11lI >= 7 then if lIl1I1l1Ii11ilI1I11lI == 8 then IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = iiIiIiIIIli11l1I11I[llil1l1l111iI1ii1iI[4]] else local iiil111Ii1lIlIilil1 = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] local IIIilllIi1iil1IIiiI if llil1l1l111iI1ii1iI[5] then IIIilllIi1iil1IIiiI = llil1l1l111iI1ii1iI[6] else IIIilllIi1iil1IIiiI = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[3]] end IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9] + 1] = iiil111Ii1lIlIilil1 IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = iiil111Ii1lIlIilil1[IIIilllIi1iil1IIiiI] end elseif llil1l1l111iI1ii1iI[3] == 234 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 12, [9] = (llil1l1l111iI1ii1iI[9] - 172) % 256, [8] = (llil1l1l111iI1ii1iI[8] - 172) % 256 } else local IiIlll1iI1I11liIlll = llil1l1l111iI1ii1iI[9] local ili1IliiIilIIlIIi11 = llil1l1l111iI1ii1iI[8] local iilIi1iIIi11iil1il1 = ili1IliiIilIIlIIi11 > 0 and ili1IliiIilIIlIIi11 - 1 or iiilIiI1I1Ili1Ii1i1 - lIiiliIi1l1IIil1lI1 if iilIi1iIIi11iil1il1 < 0 then iilIi1iIIi11iil1il1 = -1 end for iI1IiilIi1iill1lllI = IiIlll1iI1I11liIlll, IiIlll1iI1I11liIlll + iilIi1iIIi11iil1il1 do IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = lIli1llili1II1llliIII[lIiiliIi1l1IIil1lI1 + (iI1IiilIi1iill1lllI - IiIlll1iI1I11liIlll) + 1] end if ili1IliiIilIIlIIi11 == 0 then Ii1Il1iI111lI1Ilili = IiIlll1iI1I11liIlll + iilIi1iIIi11iil1il1 for iI1IiilIi1iill1lllI = Ii1Il1iI111lI1Ilili + 1, lIllIiililI1lIilI1IlI do IllI1il1Illl1iIlilI[iI1IiilIi1iill1lllI] = nil end end end elseif lIl1I1l1Ii11ilI1I11lI < 11 then if lIl1I1l1Ii11ilI1I11lI == 10 then if llil1l1l111iI1ii1iI[3] == 235 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl - 1 lIliIIiliii1ili1IiilI[lI1IiIiillIlil1iiIl] = { [2] = 17, [9] = (llil1l1l111iI1ii1iI[9] - 181) % 256, [8] = (llil1l1l111iI1ii1iI[8] - 181) % 256 } else local ilii1iiII1liIlilIll = llil1l1l111iI1ii1iI[9] local lII1II11Ill1l1lI11I = {} for lIilIlii1liiIiI1l1i, III1lilllI11i11ll1I in pairs(l1i1iiiilIlli1l1II1[IllI1il1Illl1iIlilI]) do for lIilIlii1liiIiI1l1i, i1Ii1iiliilllillill in pairs(III1lilllI11i11ll1I) do if i1Ii1iiliilllillill[1] == IllI1il1Illl1iIlilI and ilii1iiII1liIlilIll <= i1Ii1iiliilllillill[2] then local lIll111Iliii1liiiilIl = i1Ii1iiliilllillill[2] if not lII1II11Ill1l1lI11I[lIll111Iliii1liiiilIl] then i11Il111iiIiilIIlIl(lIlilIIli1lII1l11ili1, IllI1il1Illl1iIlilI[lIll111Iliii1liiiilIl]) lII1II11Ill1l1lI11I[lIll111Iliii1liiiilIl] = #lIlilIIli1lII1l11ili1 end i1Ii1iiliilllillill[1] = lIlilIIli1lII1l11ili1 i1Ii1iiliilllillill[2] = lII1II11Ill1l1lI11I[lIll111Iliii1liiiilIl] end end end end else local lllllIIiilliI1iliI1, IIIilllIi1iil1IIiiI if llil1l1l111iI1ii1iI[1] then lllllIIiilliI1iliI1 = llil1l1l111iI1ii1iI[10] else lllllIIiilliI1iliI1 = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[8]] end if llil1l1l111iI1ii1iI[5] then IIIilllIi1iil1IIiiI = llil1l1l111iI1ii1iI[6] else IIIilllIi1iil1IIiiI = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[3]] end IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]][lllllIIiilliI1iliI1] = IIIilllIi1iil1IIiiI end elseif lIl1I1l1Ii11ilI1I11lI ~= 12 then IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] = llil1l1l111iI1ii1iI[8] ~= 0 if llil1l1l111iI1ii1iI[3] ~= 0 then lI1IiIiillIlil1iiIl = lI1IiIiillIlil1iiIl + 1 end else iiil1iIi1i1Illiil1l[llil1l1l111iI1ii1iI[8]] = IllI1il1Illl1iIlilI[llil1l1l111iI1ii1iI[9]] end end end local i1IiiIi1iiiIIilI1ii, Ilililll11lll1ii111, ilii1iiII1liIlilIll, lIIiI1il11Iliili1I1 = Ill11IIii1iiiIiilll(lIl11iilili1lil1i1ll1) if i1IiiIi1iiiIIilI1ii then if ilii1iiII1liIlilIll then return iiIlil11iIl1li11lI1(IllI1il1Illl1iIlilI, ilii1iiII1liIlilIll, lIIiI1il11Iliili1I1) end else IiiII1II1liiIIiIi1i("Luraph Script:" .. (iliIlI1il1iiillIIiI[lI1IiIiillIlil1iiIl - 1] or "") .. ": " .. lIll1lIII1Illi1Il1lIl(Ilililll11lll1ii111), 0) end end llIl1I1l11IIIl111Il(lIlIi1ili1111l11iil1i, iiIiIiIIIli11l1I11I) return lIlIi1ili1111l11iil1i end local lII1II11Ill1l1lI11I = IliII1IIlIlllIiliIl() return i11Il111iiIiilIIlIl(lII1II11Ill1l1lI11I, iiIiIiIIIli11l1I11I)() end Iliillil1lI11IIll1liIlii1IiiiliilIiiIi()) 