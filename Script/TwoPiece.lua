local I111ii1lliii1li11il = assert local Iili11ii11i1111l1i1 = select local lIliI11ii1lIIii1i1III = tonumber local lIlllI1i1liIi1iIii1li = unpack local iIliiI1iIl1i1lI11Il = pcall local ilil1l1IiIiiliiIIiI = setfenv local liIIll11III1IlilIIl = setmetatable local illIl1iIllii1111l1l = type local lIlI1Ii1iliiIli1lili1 = getfenv local IIIIlllI1l1i1iIIilI = tostring local Il1llill1ll1lIlllli = error local lIl111IIi1i11l1lI1liI = string.sub local i11Iii1I1i1lIil1lIi = string.byte local lliiIli1lIiiillII11 = string.char local lIl1III1liI1111iliI1l = string.rep local Ilill1IIlI1iIii1li1 = string.gsub local iI1ii1iiIIliiiIIIIl = string.match local IiiiIiil111IIliIII1 = table.insert local iIlI1i1lilIIl1iiIIi = i11Iii1I1i1lIil1lIi("q", 1) local li1lIIIIlI1ili1i11i, iii1iiIlllIIlI1I1li = #{5182}, #{ 2131, 5006, 2321, 6208, 4321, 1759, 6208, 1305, 2738, 5177, 5653, 6282, 4963, 381, 2003, 5054, 4744, 2638, 4367, 3779, 5543, 5702 } + iIlI1i1lilIIl1iiIIi + 130936 local lIliiiIi111IlIIIilllI = {} local lIl1Iili1lIIliIiiII11 = 1 local lIiIllI1iii11il1llI, i1Illl111l1lIi11iii local function IIl1I1I1l1iiIII11l1(liilli11ili11ilIll1, lIli11IilIiliiI1lIIii) local iiI11I1IililIIiiiI1 liilli11ili11ilIll1 = Ilill1IIlI1iIii1li1(lIl111IIi1i11l1lI1liI(liilli11ili11ilIll1, 5), "..", function(lI1I1Ii1iI1ilIi1iil) if i11Iii1I1i1lIil1lIi(lI1I1Ii1iI1ilIi1iil, 2) == 72 then iiI11I1IililIIiiiI1 = lIliI11ii1lIIii1i1III(lIl111IIi1i11l1lI1liI(lI1I1Ii1iI1ilIi1iil, 1, 1)) return "" else local I1IillIIill1l1I11iI = lliiIli1lIiiillII11(lIliI11ii1lIIii1i1III(lI1I1Ii1iI1ilIi1iil, 16)) if iiI11I1IililIIiiiI1 then local I1IilIIliiII11IiIli = lIl1III1liI1111iliI1l(I1IillIIill1l1I11iI, iiI11I1IililIIiiiI1) iiI11I1IililIIiiiI1 = nil return I1IilIIliiII11IiIli else return I1IillIIill1l1I11iI end end end) local function Il1lIl1Iii1l11ilIli() local l11Illi111IiliiiiiI = i11Iii1I1i1lIil1lIi(liilli11ili11ilIll1, lIl1Iili1lIIliIiiII11, lIl1Iili1lIIliIiiII11) lIl1Iili1lIIliIiiII11 = lIl1Iili1lIIliIiiII11 + 1 return l11Illi111IiliiiiiI end local function lIIilliiIIIi1illiiI() local l11Illi111IiliiiiiI, I1IillIIill1l1I11iI, I1IilIIliiII11IiIli, lii111I11il1IIl1I1I = i11Iii1I1i1lIil1lIi(liilli11ili11ilIll1, lIl1Iili1lIIliIiiII11, lIl1Iili1lIIliIiiII11 + 3) lIl1Iili1lIIliIiiII11 = lIl1Iili1lIIliIiiII11 + 4 return lii111I11il1IIl1I1I * 16777216 + I1IilIIliiII11IiIli * 65536 + I1IillIIill1l1I11iI * 256 + l11Illi111IiliiiiiI end local function liiII1l1i1I11I11I1l(l1i11l1ll11IiilIllI, IlliiI1llllIlI1Ii1i, li11liiIlll1iIlIlil) if li11liiIlll1iIlIlil then local iIIliiii11iIIiliI1I, lIllIIiilliIlliiIl1ii = 0, 0 for lIlllliiliIl1IliiIl1l = IlliiI1llllIlI1Ii1i, li11liiIlll1iIlIlil do iIIliiii11iIIiliI1I = iIIliiii11iIIiliI1I + 2 ^ lIllIIiilliIlliiIl1ii * liiII1l1i1I11I11I1l(l1i11l1ll11IiilIllI, lIlllliiliIl1IliiIl1l) lIllIIiilliIlliiIl1ii = lIllIIiilliIlliiIl1ii + 1 end return iIIliiii11iIIiliI1I else local I1IilIiliIl1I111lIi = 2 ^ (IlliiI1llllIlI1Ii1i - 1) return I1IilIiliIl1I111lIi <= l1i11l1ll11IiilIllI % (I1IilIiliIl1I111lIi + I1IilIiliIl1I111lIi) and 1 or 0 end end local function Ili1ii1IIiIIll1i11l() local l11Illi111IiliiiiiI, I1IillIIill1l1I11iI = lIIilliiIIIi1illiiI(), lIIilliiIIIi1illiiI() if l11Illi111IiliiiiiI == 0 and I1IillIIill1l1I11iI == 0 then return 0 end return (-2 * liiII1l1i1I11I11I1l(I1IillIIill1l1I11iI, 32) + 1) * 2 ^ (liiII1l1i1I11I11I1l(I1IillIIill1l1I11iI, 21, 31) - 1023) * ((liiII1l1i1I11I11I1l(I1IillIIill1l1I11iI, 1, 20) * 4294967296 + l11Illi111IiliiiiiI) / 4503599627370496 + 1) end local iIlIlllllIi1Iiili1l = bit or bit32 local IIlilil1iI1i1ill11I = iIlIlllllIi1Iiili1l and iIlIlllllIi1Iiili1l.bxor or function(l11Illi111IiliiiiiI, I1IillIIill1l1I11iI) local lIlI1IllIl11iI1liIiIl = 1 local I1IilIIliiII11IiIli = 0 while l11Illi111IiliiiiiI > 0 and I1IillIIill1l1I11iI > 0 do local i1lli1liIIi1l1li11i = l11Illi111IiliiiiiI % 2 local lll1l1IIIiliIlil1li = I1IillIIill1l1I11iI % 2 if i1lli1liIIi1l1li11i ~= lll1l1IIIiliIlil1li then I1IilIIliiII11IiIli = I1IilIIliiII11IiIli + lIlI1IllIl11iI1liIiIl end l11Illi111IiliiiiiI = (l11Illi111IiliiiiiI - i1lli1liIIi1l1li11i) / 2 I1IillIIill1l1I11iI = (I1IillIIill1l1I11iI - lll1l1IIIiliIlil1li) / 2 lIlI1IllIl11iI1liIiIl = lIlI1IllIl11iI1liIiIl * 2 end if l11Illi111IiliiiiiI < I1IillIIill1l1I11iI then l11Illi111IiliiiiiI = I1IillIIill1l1I11iI end while l11Illi111IiliiiiiI > 0 do local i1lli1liIIi1l1li11i = l11Illi111IiliiiiiI % 2 if i1lli1liIIi1l1li11i > 0 then I1IilIIliiII11IiIli = I1IilIIliiII11IiIli + lIlI1IllIl11iI1liIiIl end l11Illi111IiliiiiiI = (l11Illi111IiliiiiiI - i1lli1liIIi1l1li11i) / 2 lIlI1IllIl11iI1liIiIl = lIlI1IllIl11iI1liIiIl * 2 end return I1IilIIliiII11IiIli end local function Ii11iI1IIIIiI1111lI(Iii1I1i1Ili11liilii) local lIl11IilII1IIiIIlIiI1 = { i11Iii1I1i1lIil1lIi(liilli11ili11ilIll1, lIl1Iili1lIIliIiiII11, lIl1Iili1lIIliIiiII11 + 3) } lIl1Iili1lIIliIiiII11 = lIl1Iili1lIIliIiiII11 + 4 local l11Illi111IiliiiiiI = IIlilil1iI1i1ill11I(lIl11IilII1IIiIIlIiI1[1], i1Illl111l1lIi11iii) local I1IillIIill1l1I11iI = IIlilil1iI1i1ill11I(lIl11IilII1IIiIIlIiI1[2], i1Illl111l1lIi11iii) local I1IilIIliiII11IiIli = IIlilil1iI1i1ill11I(lIl11IilII1IIiIIlIiI1[3], i1Illl111l1lIi11iii) local lii111I11il1IIl1I1I = IIlilil1iI1i1ill11I(lIl11IilII1IIiIIlIiI1[4], i1Illl111l1lIi11iii) i1Illl111l1lIi11iii = (69 * i1Illl111l1lIi11iii + Iii1I1i1Ili11liilii) % 256 return lii111I11il1IIl1I1I * 16777216 + I1IilIIliiII11IiIli * 65536 + I1IillIIill1l1I11iI * 256 + l11Illi111IiliiiiiI end local function lIlI11Ii11llIlilIIill(I1Iil1i1l1IlIi1I1Ii) local Il11iiI1Iii1iil1ilI = lIIilliiIIIi1illiiI() local lIll1lIliIi1llI1iliIi = "" for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, Il11iiI1Iii1iil1ilI do lIll1lIliIi1llI1iliIi = lIll1lIliIi1llI1iliIi .. lliiIli1lIiiillII11(IIlilil1iI1i1ill11I(i11Iii1I1i1lIil1lIi(liilli11ili11ilIll1, lIl1Iili1lIIliIiiII11 + lIlllliiliIl1IliiIl1l - 1), lIiIllI1iii11il1llI)) lIiIllI1iii11il1llI = (I1Iil1i1l1IlIi1I1Ii * lIiIllI1iii11il1llI + 37) % 256 end lIl1Iili1lIIliIiiII11 = lIl1Iili1lIIliIiiII11 + Il11iiI1Iii1iil1ilI return lIll1lIliIi1llI1iliIi end lIiIllI1iii11il1llI = Il1lIl1Iii1l11ilIli() i1Illl111l1lIi11iii = Il1lIl1Iii1l11ilIli() local lIl111lIIiIIi1lllli = {} for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, Il1lIl1Iii1l11ilIli() do local lIlliiiIl1i111I1iilIl = Il1lIl1Iii1l11ilIli() local lIiII11iillIIili1l1 = (lIlllliiliIl1IliiIl1l - 1) * 2 lIl111lIIiIIi1lllli[lIiII11iillIIili1l1] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, 1, 4) lIl111lIIiIIi1lllli[lIiII11iillIIili1l1 + 1] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, 5, 8) end local function i11Il1ll1llillIlIIi() local llIIl11ll1IIIl1II1l = { nil, {}, {}, {}, {}, nil, nil } local I1lil11ii11il1Iii1I = lIIilliiIIIi1illiiI() - (#{ 3533, 6641, 5448, 5785, 1535, 1536, 1680, 2157, 1985, 5111, 6692, 5605, 1482, 5234, 341, 5812, 3589, 5421, 6277, 283, 737 } + iIlI1i1lilIIl1iiIIi + 133638) local ilIllllliIlii1lliII = Il1lIl1Iii1l11ilIli() for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, I1lil11ii11il1Iii1I do local lIii1iIi11lIiilI11I = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local lIlliiiIl1i111I1iilIl = Ii11iI1IIIIiI1111lI(ilIllllliIlii1lliII) lIii1iIi11lIiilI11I[9] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, #{ 1234, 2484, 6842, 5531, 4669, 4366, 6285, 4056, 5410, 5842 }, #{ 5408, 1547, 3611, 2466, 3788, 2032, 275, 2952, 6532, 681, 1385, 2143, 1450, 5269, 3624, 2107, 112, 2427 }) lIii1iIi11lIiilI11I[4] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, #{ 5007, 1863, 2039, 555, 6070, 3101, 3506, 6569, 5120, 1633, 6779, 5356, 184, 2538, 1507, 4130, 3062, 58, 6867, 3572, 2750, 6260 } + iIlI1i1lilIIl1iiIIi + -108, #{ 1296, 209, 3724, 3616, 2948, 4848, 2851, 5406, 4553, 6460, 4043, 4197, 427, 184, 2391, 788, 6794, 2198, 4768, 1214, 4518, 3492, 5763 } + iIlI1i1lilIIl1iiIIi + -104) lIii1iIi11lIiilI11I[6] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, #{2164}, #{ 3310, 2355, 1542, 3088, 2434, 3423, 3182, 6065, 2251, 1706, 3486, 1380, 3359, 2842, 5053, 4941, 2359, 1072 }) lIii1iIi11lIiilI11I[1] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, #{441}, #{ 4550, 2255, 5188, 2005, 962, 6129, 3505, 2688, 5135 }) lIii1iIi11lIiilI11I[10] = liiII1l1i1I11I11I1l(lIlliiiIl1i111I1iilIl, #{ 3838, 1960, 5427, 1512, 6385, 1938, 4855, 3209, 1988, 665, 6258, 3566, 1916, 6616, 2579, 105, 3453, 5697, 3342 }, #{ 2966, 2262, 4838, 2943, 1298, 837, 99, 4440, 2201, 5276, 6577, 3015, 2800, 2082, 3472, 2071, 4509, 953, 368, 57, 3418, 4180, 6763, 3295 } + iIlI1i1lilIIl1iiIIi + -111) llIIl11ll1IIIl1II1l[3][lIlllliiliIl1IliiIl1l] = lIii1iIi11lIiilI11I end local ii1lllll11Ill111iIl = lIIilliiIIIi1illiiI() for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, ii1lllll11Ill111iIl do llIIl11ll1IIIl1II1l[2][lIlllliiliIl1IliiIl1l] = lIIilliiIIIi1illiiI() end llIIl11ll1IIIl1II1l[1] = Il1lIl1Iii1l11ilIli() lIIilliiIIIi1illiiI() Il1lIl1Iii1l11ilIli() llIIl11ll1IIIl1II1l[7] = Il1lIl1Iii1l11ilIli() local ii1lllll11Ill111iIl = lIIilliiIIIi1illiiI() for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, ii1lllll11Ill111iIl do llIIl11ll1IIIl1II1l[5][lIlllliiliIl1IliiIl1l - li1lIIIIlI1ili1i11i] = i11Il1ll1llillIlIIi() end Il1lIl1Iii1l11ilIli() llIIl11ll1IIIl1II1l[6] = Il1lIl1Iii1l11ilIli() lIIilliiIIIi1illiiI() local ii1lllll11Ill111iIl = lIIilliiIIIi1illiiI() - (#{ 4535, 4314, 833, 1339, 1490, 825, 1668, 2793, 79, 242, 5497, 3519, 6278, 4989, 3586, 3144, 6213, 2113, 6462, 5272, 846, 4035 } + iIlI1i1lilIIl1iiIIi + 133640) local ilIi1illl1IIiIlllli = Il1lIl1Iii1l11ilIli() for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, ii1lllll11Ill111iIl do local lIlill1iI1lIIlIil11il local illIl1iIllii1111l1l = Il1lIl1Iii1l11ilIli() if illIl1iIllii1111l1l == #{ 33, 4353, 4439, 3176, 6643, 2933, 3520, 5450, 4637, 5927, 4708, 1000, 5067, 1238, 4666, 1674, 2658, 568, 2872, 3261, 3559, 2627, 779 } + iIlI1i1lilIIl1iiIIi + -80 then lIlill1iI1lIIlIil11il = Ili1ii1IIiIIll1i11l() end if illIl1iIllii1111l1l == #{ 366, 2909, 6230, 5932, 3177, 1084, 6137, 4218, 299, 5419, 3757, 1361, 5565, 1560, 4959, 192, 617, 474, 2944, 3520 } + iIlI1i1lilIIl1iiIIi + -36 then lIlill1iI1lIIlIil11il = lIl111IIi1i11l1lI1liI(lIlI11Ii11llIlilIIill(ilIi1illl1IIiIlllli), #{ 6606, 4454, 5002 }) end if illIl1iIllii1111l1l == #{ 6654, 625, 2714, 5103, 4196, 3374, 5719, 1968, 4772, 767, 2791, 5118, 6753, 3954, 1601, 1634, 2611, 6113, 138, 1225, 1156, 6907 } + iIlI1i1lilIIl1iiIIi + -74 then lIlill1iI1lIIlIil11il = lIl111IIi1i11l1lI1liI(lIlI11Ii11llIlilIIill(#{ 2914, 4467, 3254, 4472, 2093, 2755, 1134, 3531, 83, 932, 4551, 1626, 2480, 205, 1333, 6845, 166, 3890, 6061, 4815, 5820, 4523, 1546 } + iIlI1i1lilIIl1iiIIi + -16), #{ 3609, 3607, 445, 3537 }) end if illIl1iIllii1111l1l == #{ 4820, 3906, 1252, 847, 3354, 139, 6024, 476, 6407, 2037, 4859, 4610, 275, 109, 2663, 93, 4459, 3046, 749, 6231, 2502 } + iIlI1i1lilIIl1iiIIi + -92 then lIlill1iI1lIIlIil11il = Il1lIl1Iii1l11ilIli() + lIIilliiIIIi1illiiI() + Ili1ii1IIiIIll1i11l() end if illIl1iIllii1111l1l == #{ 5944, 2661, 6792, 4562, 1687, 5104, 5889, 6731, 4895, 4047, 2235, 5958, 5033, 5261, 85, 4287, 574, 4138, 1734, 6954, 6697, 6684, 735, 6673 } + iIlI1i1lilIIl1iiIIi + -29 then lIlill1iI1lIIlIil11il = #{ 3993, 3875, 5962, 1713, 2039, 3452, 2297, 1962, 2716, 5852, 698, 4313, 3020, 1351, 3955, 1353, 2035, 4396, 1769, 2466, 3800, 2278, 2092 } + iIlI1i1lilIIl1iiIIi + 46241 == #{ 3993, 3875, 5962, 1713, 2039, 3452, 2297, 1962, 2716, 5852, 698, 4313, 3020, 1351, 3955, 1353, 2035, 4396, 1769, 2466, 3800, 2278, 2092 } + iIlI1i1lilIIl1iiIIi + 46241 end if illIl1iIllii1111l1l == #{ 2839, 321, 6201, 4931, 22, 6770, 4720, 2386, 1143, 3769, 1661, 3953, 6944, 1133, 6404, 6183, 391, 2545, 6675, 4694, 6613, 5417 } + iIlI1i1lilIIl1iiIIi + -89 then lIlill1iI1lIIlIil11il = #{ 3488, 1462, 455, 4150, 4041, 5942, 3647, 6881, 6812, 4256, 4820, 583, 1467, 3816, 3160, 4167, 1343, 1154, 3284, 1522, 3868, 5658 } + iIlI1i1lilIIl1iiIIi + 38546 == #{ 6037, 1019, 4182, 679, 3508, 4046, 3767, 3947, 4309, 1447, 3940, 6852, 3763, 1133, 6394, 4654, 3718, 2002, 613, 218, 3611, 3458, 28, 4842 } + iIlI1i1lilIIl1iiIIi + 84859 end if illIl1iIllii1111l1l == #{ 857, 83, 5154, 3798, 768, 5528, 4371, 1759, 2931, 6496, 1995, 1985, 3239, 1974, 4136, 3264, 4409, 4479, 2565, 778, 3170 } + iIlI1i1lilIIl1iiIIi + 2 then lIlill1iI1lIIlIil11il = Ili1ii1IIiIIll1i11l() end if illIl1iIllii1111l1l == #{ 2865, 6394, 5882, 5250, 3393, 5645, 1067, 4553, 5744, 2836, 3121, 5477, 6638, 4949, 2134, 5986, 2592, 1517, 412, 2319, 1732, 1084, 3092 } + iIlI1i1lilIIl1iiIIi + -2 then lIlill1iI1lIIlIil11il = lIIilliiIIIi1illiiI() end if illIl1iIllii1111l1l == #{ 5273, 463, 553, 3682, 6886, 3576, 3035, 1655, 231, 1426, 6370, 5013, 4707, 5851, 2553, 1242, 4113, 5978, 444, 5770, 5967 } + iIlI1i1lilIIl1iiIIi + 36 then lIlill1iI1lIIlIil11il = Ili1ii1IIiIIll1i11l() end llIIl11ll1IIIl1II1l[4][lIlllliiliIl1IliiIl1l - li1lIIIIlI1ili1i11i] = lIlill1iI1lIIlIil11il end for lIlllliiliIl1IliiIl1l = li1lIIIIlI1ili1i11i, I1lil11ii11il1Iii1I do local lIii1iIi11lIiilI11I = llIIl11ll1IIIl1II1l[3][lIlllliiliIl1IliiIl1l] local lIlIi1i11II1IIIlilii1 = lIl111lIIiIIi1lllli[lIii1iIi11lIiilI11I[4]] if lIlIi1i11II1IIIlilii1 == #{ 1882, 2577, 6032, 304 } then lIii1iIi11lIiilI11I[5] = llIIl11ll1IIIl1II1l[4][lIii1iIi11lIiilI11I[6]] end if lIlIi1i11II1IIIlilii1 == #{4127} and lIii1iIi11lIiilI11I[1] > 255 then lIii1iIi11lIiilI11I[7] = true lIii1iIi11lIiilI11I[8] = llIIl11ll1IIIl1II1l[4][lIii1iIi11lIiilI11I[1] - 256] end if lIlIi1i11II1IIIlilii1 == #{ 6354, 5256, 5371 } then if lIii1iIi11lIiilI11I[1] > 255 then lIii1iIi11lIiilI11I[7] = true lIii1iIi11lIiilI11I[8] = llIIl11ll1IIIl1II1l[4][lIii1iIi11lIiilI11I[1] - 256] end if lIii1iIi11lIiilI11I[9] > 255 then lIii1iIi11lIiilI11I[2] = true lIii1iIi11lIiilI11I[3] = llIIl11ll1IIIl1II1l[4][lIii1iIi11lIiilI11I[9] - 256] end end if lIlIi1i11II1IIIlilii1 == #{277, 3608} and lIii1iIi11lIiilI11I[9] > 255 then lIii1iIi11lIiilI11I[2] = true lIii1iIi11lIiilI11I[3] = llIIl11ll1IIIl1II1l[4][lIii1iIi11lIiilI11I[9] - 256] end end return llIIl11ll1IIIl1II1l end local function liIIliIii1i11li1i11(llIIl11ll1IIIl1II1l, lIli11IilIiliiI1lIIii, i11i1IillIi11ii11I1) local ii111i1iiiIllI111Ii, lilli1lI1ll1lIi11ll = 14, 2 local lliIlii1Ili1ilIlIl1 = llIIl11ll1IIIl1II1l[3] local lli1iIl1II11I1Ii1Ii = 1 local ii1il1l11Iliii1llll = llIIl11ll1IIIl1II1l[5] local IliiI1111illII1ii1i = llIIl11ll1IIIl1II1l[7] local i1Iiii1Il11i1l1lI1i = llIIl11ll1IIIl1II1l[6] local lIliII1iIIiliIlIiiiii = 4 local lI11ll1i11lii11iIl1 = llIIl11ll1IIIl1II1l[2] local iIIIIililIIIiiilIIi = 1 local function llIiII111Ilillli1II(...) local illIIIi111IlI1i1lli = 0 local IIIII1Iilli1llilI1i = { lIlllI1i1liIi1iIii1li({}, 1, i1Iiii1Il11i1l1lI1i) } local iliil1l1iilI1i1I1l1 = 1 local lIl1iIIi1IllI1I1Il11i = {} local lIliIl1liii1I1llii11I = {} local lIli11IilIiliiI1lIIii = lIlI1Ii1iliiIli1lili1() local ilIIllI1li1I1iiIiii = { ... } local IIIi1IiIl1lllI1llll = #ilIIllI1li1I1iiIiii - 1 for lIlllliiliIl1IliiIl1l = 0, IIIi1IiIl1lllI1llll do if lIlllliiliIl1IliiIl1l < IliiI1111illII1ii1i then IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = ilIIllI1li1I1iiIiii[lIlllliiliIl1IliiIl1l + 1] end end local function l1ii11ii111i1lIlill(...) local I1IilIIliiII11IiIli = Iili11ii11i1111l1i1("#", ...) local Ii1i11llll1l1lli1ll = { ... } return I1IilIIliiII11IiIli, Ii1i11llll1l1lli1ll end local function l1Il1iIlIIIIii1IlIi() while true do local lIl1ll1illlIIl111Ii1l = lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] local lIlIll1111II11llIIii1 = lIl1ll1illlIIl111Ii1l[4] iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 if lIlIll1111II11llIIii1 >= 12 then if lIlIll1111II11llIIii1 >= 18 then if lIlIll1111II11llIIii1 < 21 then if lIlIll1111II11llIIii1 < 19 then local I1IilIIliiII11IiIli if lIl1ll1illlIIl111Ii1l[2] then I1IilIIliiII11IiIli = lIl1ll1illlIIl111Ii1l[3] else I1IilIIliiII11IiIli = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[9]] end IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]][I1IilIIliiII11IiIli] elseif lIlIll1111II11llIIii1 == 20 then local I1IillIIill1l1I11iI, I1IilIIliiII11IiIli if lIl1ll1illlIIl111Ii1l[7] then I1IillIIill1l1I11iI = lIl1ll1illlIIl111Ii1l[8] else I1IillIIill1l1I11iI = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end if lIl1ll1illlIIl111Ii1l[2] then I1IilIIliiII11IiIli = lIl1ll1illlIIl111Ii1l[3] else I1IilIIliiII11IiIli = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[9]] end IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]][I1IillIIill1l1I11iI] = I1IilIIliiII11IiIli elseif lIl1ll1illlIIl111Ii1l[9] == 204 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 3, [10] = (lIl1ll1illlIIl111Ii1l[10] - 110) % 256, [9] = (lIl1ll1illlIIl111Ii1l[1] - 110) % 256 } else IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = -IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end elseif lIlIll1111II11llIIii1 < 23 then if lIlIll1111II11llIIii1 == 22 then local I1IillIIill1l1I11iI, I1IilIIliiII11IiIli if lIl1ll1illlIIl111Ii1l[7] then I1IillIIill1l1I11iI = lIl1ll1illlIIl111Ii1l[8] else I1IillIIill1l1I11iI = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end if lIl1ll1illlIIl111Ii1l[2] then I1IilIIliiII11IiIli = lIl1ll1illlIIl111Ii1l[3] else I1IilIIliiII11IiIli = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[9]] end if I1IillIIill1l1I11iI == I1IilIIliiII11IiIli ~= (lIl1ll1illlIIl111Ii1l[10] ~= 0) then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 end else local Il1i1ilIiiIliII1li1 = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] for lIlllliiliIl1IliiIl1l = lIl1ll1illlIIl111Ii1l[1] + 1, lIl1ll1illlIIl111Ii1l[9] do Il1i1ilIiiIliII1li1 = Il1i1ilIiiIliII1li1 .. IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] end IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = Il1i1ilIiiIliII1li1 end elseif lIlIll1111II11llIIii1 == 24 then for lIlllliiliIl1IliiIl1l = lIl1ll1illlIIl111Ii1l[10], lIl1ll1illlIIl111Ii1l[1] do IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = nil end else local iiIi11IlIlIlI1i1lii = ii1il1l11Iliii1llll[lIl1ll1illlIIl111Ii1l[6]] local I11Ilil1iliiIiIi1ll = {} if iiIi11IlIlIlI1i1lii[lli1iIl1II11I1Ii1Ii] > 0 then do local iil11IiiIi11iIl11ii = {} I11Ilil1iliiIiIi1ll = liIIll11III1IlilIIl({}, { __index = function(Ii1i11llll1l1lli1ll, l1l1iiIIl11l1iIlli1) local lIlIl1illilii1IiII1il = iil11IiiIi11iIl11ii[l1l1iiIIl11l1iIlli1] return lIlIl1illilii1IiII1il[1][lIlIl1illilii1IiII1il[2]] end, __newindex = function(Ii1i11llll1l1lli1ll, l1l1iiIIl11l1iIlli1, lliIii1i1i11i11i11i) local lIlIl1illilii1IiII1il = iil11IiiIi11iIl11ii[l1l1iiIIl11l1iIlli1] lIlIl1illilii1IiII1il[1][lIlIl1illilii1IiII1il[2]] = lliIii1i1i11i11i11i end }) for lIlllliiliIl1IliiIl1l = 1, iiIi11IlIlIlI1i1lii[lli1iIl1II11I1Ii1Ii] do local II1lIII1lIi1IIiIlll = lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] if II1lIII1lIi1IIiIlll[lIliII1iIIiliIlIiiiii] == ii111i1iiiIllI111Ii then iil11IiiIi11iIl11ii[lIlllliiliIl1IliiIl1l - 1] = { IIIII1Iilli1llilI1i, II1lIII1lIi1IIiIlll[iIIIIililIIIiiilIIi] } elseif II1lIII1lIi1IIiIlll[lIliII1iIIiliIlIiiiii] == lilli1lI1ll1lIi11ll then iil11IiiIi11iIl11ii[lIlllliiliIl1IliiIl1l - 1] = { i11i1IillIi11ii11I1, II1lIII1lIi1IIiIlll[iIIIIililIIIiiilIIi] } end iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 end if not lIl1iIIi1IllI1I1Il11i[IIIII1Iilli1llilI1i] then lIl1iIIi1IllI1I1Il11i[IIIII1Iilli1llilI1i] = {iil11IiiIi11iIl11ii} else IiiiIiil111IIliIII1(lIl1iIIi1IllI1I1Il11i[IIIII1Iilli1llilI1i], iil11IiiIi11iIl11ii) end end end local lIlIIi1i1iiii1II1liIi = liIIliIii1i11li1i11(iiIi11IlIlIlI1i1lii, lIli11IilIiliiI1lIIii, I11Ilil1iliiIiIi1ll) IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = lIlIIi1i1iiii1II1liIi end elseif lIlIll1111II11llIIii1 >= 15 then if lIlIll1111II11llIIii1 < 16 then local lIiII11iillIIili1l1 = (lIl1ll1illlIIl111Ii1l[9] - 1) * 50 local lIlli1I11il1illIiil1I = lIl1ll1illlIIl111Ii1l[1] if lIlli1I11il1illIiil1I == 0 then lIlli1I11il1illIiil1I = illIIIi111IlI1i1lli - lIl1ll1illlIIl111Ii1l[10] end for lIlllliiliIl1IliiIl1l = 1, lIlli1I11il1illIiil1I do IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]][lIiII11iillIIili1l1 + lIlllliiliIl1IliiIl1l] = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10] + lIlllliiliIl1IliiIl1l] end elseif lIlIll1111II11llIIii1 ~= 17 then local iiI1II1li11lI1IIiIi = lIl1ll1illlIIl111Ii1l[10] local ilIIllI1li1I1iiIiii = lIl1ll1illlIIl111Ii1l[1] local IllIl1i1lII1IlI1IIl = lIl1ll1illlIIl111Ii1l[9] local llliiIiIlIl1l1i1ili, ll1111Ii1lllIIiiI1I, l1Il1iIlIIIIii1IlIi if ilIIllI1li1I1iiIiii ~= 1 then if ilIIllI1li1I1iiIiii ~= 0 then ll1111Ii1lllIIiiI1I = iiI1II1li11lI1IIiIi + ilIIllI1li1I1iiIiii - 1 else ll1111Ii1lllIIiiI1I = illIIIi111IlI1i1lli end ll1111Ii1lllIIiiI1I, llliiIiIlIl1l1i1ili = l1ii11ii111i1lIlill(IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi](lIlllI1i1liIi1iIii1li(IIIII1Iilli1llilI1i, iiI1II1li11lI1IIiIi + 1, ll1111Ii1lllIIiiI1I))) else ll1111Ii1lllIIiiI1I, llliiIiIlIl1l1i1ili = l1ii11ii111i1lIlill(IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi]()) end if IllIl1i1lII1IlI1IIl ~= 1 then if IllIl1i1lII1IlI1IIl ~= 0 then ll1111Ii1lllIIiiI1I = iiI1II1li11lI1IIiIi + IllIl1i1lII1IlI1IIl - 2 illIIIi111IlI1i1lli = ll1111Ii1lllIIiiI1I + 1 else ll1111Ii1lllIIiiI1I = ll1111Ii1lllIIiiI1I + iiI1II1li11lI1IIiIi - 1 illIIIi111IlI1i1lli = ll1111Ii1lllIIiiI1I end l1Il1iIlIIIIii1IlIi = 0 for lIlllliiliIl1IliiIl1l = iiI1II1li11lI1IIiIi, ll1111Ii1lllIIiiI1I do l1Il1iIlIIIIii1IlIi = l1Il1iIlIIIIii1IlIi + 1 IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = llliiIiIlIl1l1i1ili[l1Il1iIlIIIIii1IlIi] end else illIIIi111IlI1i1lli = iiI1II1li11lI1IIiIi - 1 end for lIlllliiliIl1IliiIl1l = illIIIi111IlI1i1lli + 1, i1Iiii1Il11i1l1lI1i do IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = nil end else local I1IillIIill1l1I11iI, I1IilIIliiII11IiIli if lIl1ll1illlIIl111Ii1l[7] then I1IillIIill1l1I11iI = lIl1ll1illlIIl111Ii1l[8] else I1IillIIill1l1I11iI = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end if lIl1ll1illlIIl111Ii1l[2] then I1IilIIliiII11IiIli = lIl1ll1illlIIl111Ii1l[3] else I1IilIIliiII11IiIli = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[9]] end IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = I1IillIIill1l1I11iI * I1IilIIliiII11IiIli end elseif lIlIll1111II11llIIii1 < 13 then if lIl1ll1illlIIl111Ii1l[9] == 248 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 14, [10] = (lIl1ll1illlIIl111Ii1l[10] - 232) % 256, [1] = (lIl1ll1illlIIl111Ii1l[1] - 232) % 256 } elseif lIl1ll1illlIIl111Ii1l[9] == 182 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 2, [10] = (lIl1ll1illlIIl111Ii1l[10] - 21) % 256, [1] = (lIl1ll1illlIIl111Ii1l[1] - 21) % 256 } else local iiI1II1li11lI1IIiIi = lIl1ll1illlIIl111Ii1l[10] local ii1lllll11Ill111iIl = lIl1ll1illlIIl111Ii1l[1] local lIllI1lil11l1lIi1Il11 = ii1lllll11Ill111iIl > 0 and ii1lllll11Ill111iIl - 1 or IIIi1IiIl1lllI1llll - IliiI1111illII1ii1i if lIllI1lil11l1lIi1Il11 < 0 then lIllI1lil11l1lIi1Il11 = -1 end for lIlllliiliIl1IliiIl1l = iiI1II1li11lI1IIiIi, iiI1II1li11lI1IIiIi + lIllI1lil11l1lIi1Il11 do IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = ilIIllI1li1I1iiIiii[IliiI1111illII1ii1i + (lIlllliiliIl1IliiIl1l - iiI1II1li11lI1IIiIi) + 1] end if ii1lllll11Ill111iIl == 0 then illIIIi111IlI1i1lli = iiI1II1li11lI1IIiIi + lIllI1lil11l1lIi1Il11 for lIlllliiliIl1IliiIl1l = illIIIi111IlI1i1lli + 1, i1Iiii1Il11i1l1lI1i do IIIII1Iilli1llilI1i[lIlllliiliIl1IliiIl1l] = nil end end end elseif lIlIll1111II11llIIii1 == 14 then if lIl1ll1illlIIl111Ii1l[9] == 141 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 6, [10] = (lIl1ll1illlIIl111Ii1l[10] - 67) % 256, [1] = (lIl1ll1illlIIl111Ii1l[1] - 67) % 256 } else IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end else lIl1iIIi1IllI1I1Il11i[IIIII1Iilli1llilI1i] = nil local iiI1II1li11lI1IIiIi = lIl1ll1illlIIl111Ii1l[10] local i11iiii1Iill1IIlIII = lIl1ll1illlIIl111Ii1l[1] if i11iiii1Iill1IIlIII == 1 then return true end local ll1111Ii1lllIIiiI1I = iiI1II1li11lI1IIiIi + i11iiii1Iill1IIlIII - 2 if i11iiii1Iill1IIlIII == 0 then ll1111Ii1lllIIiiI1I = illIIIi111IlI1i1lli end return true, iiI1II1li11lI1IIiIi, ll1111Ii1lllIIiiI1I end elseif lIlIll1111II11llIIii1 < 6 then if lIlIll1111II11llIIii1 >= 3 then if lIlIll1111II11llIIii1 < 4 then if lIl1ll1illlIIl111Ii1l[1] == 243 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 7, [10] = (lIl1ll1illlIIl111Ii1l[10] - 157) % 256, [9] = (lIl1ll1illlIIl111Ii1l[9] - 157) % 256 } elseif not not IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] == (lIl1ll1illlIIl111Ii1l[9] == 0) then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 end elseif lIlIll1111II11llIIii1 == 5 then lIli11IilIiliiI1lIIii[lIl1ll1illlIIl111Ii1l[5]] = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] else local IIl1ll11illl1iII11l = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] local I1IilIIliiII11IiIli if lIl1ll1illlIIl111Ii1l[2] then I1IilIIliiII11IiIli = lIl1ll1illlIIl111Ii1l[3] else I1IilIIliiII11IiIli = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[9]] end IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10] + 1] = IIl1ll11illl1iII11l IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = IIl1ll11illl1iII11l[I1IilIIliiII11IiIli] end elseif lIlIll1111II11llIIii1 < 1 then IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = lIl1ll1illlIIl111Ii1l[5] elseif lIlIll1111II11llIIii1 == 2 then IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = i11i1IillIi11ii11I1[lIl1ll1illlIIl111Ii1l[1]] else IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = lIl1ll1illlIIl111Ii1l[1] ~= 0 if lIl1ll1illlIIl111Ii1l[9] ~= 0 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 end end elseif lIlIll1111II11llIIii1 < 9 then if lIlIll1111II11llIIii1 < 7 then i11i1IillIi11ii11I1[lIl1ll1illlIIl111Ii1l[1]] = IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] elseif lIlIll1111II11llIIii1 == 8 then IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = lIli11IilIiliiI1lIIii[lIl1ll1illlIIl111Ii1l[5]] else local iiI1II1li11lI1IIiIi = lIl1ll1illlIIl111Ii1l[10] local lIiII11iillIIili1l1 = iiI1II1li11lI1IIiIi + 2 local Il1i1ilIiiIliII1li1 = { IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi](IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi + 1], IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi + 2]) } for lIlllliiliIl1IliiIl1l = 1, lIl1ll1illlIIl111Ii1l[9] do IIIII1Iilli1llilI1i[lIiII11iillIIili1l1 + lIlllliiliIl1IliiIl1l] = Il1i1ilIiiIliII1li1[lIlllliiliIl1IliiIl1l] end if IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi + 3] ~= nil then IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi + 2] = IIIII1Iilli1llilI1i[iiI1II1li11lI1IIiIi + 3] else iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + 1 end end elseif lIlIll1111II11llIIii1 < 10 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 + (lIl1ll1illlIIl111Ii1l[6] - iii1iiIlllIIlI1I1li) elseif lIlIll1111II11llIIii1 == 11 then if lIl1ll1illlIIl111Ii1l[9] == 187 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 24, [10] = (lIl1ll1illlIIl111Ii1l[10] - 94) % 256, [1] = (lIl1ll1illlIIl111Ii1l[1] - 94) % 256 } elseif lIl1ll1illlIIl111Ii1l[9] == 230 then iliil1l1iilI1i1I1l1 = iliil1l1iilI1i1I1l1 - 1 lliIlii1Ili1ilIlIl1[iliil1l1iilI1i1I1l1] = { [4] = 13, [10] = (lIl1ll1illlIIl111Ii1l[10] - 231) % 256, [1] = (lIl1ll1illlIIl111Ii1l[1] - 231) % 256 } else IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = not IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[1]] end else IIIII1Iilli1llilI1i[lIl1ll1illlIIl111Ii1l[10]] = { lIlllI1i1liIi1iIii1li(lIliiiIi111IlIIIilllI, 1, lIl1ll1illlIIl111Ii1l[1] == 0 and 255 or lIl1ll1illlIIl111Ii1l[1]) } end end end local iII11ll1iIIliiIl1il, lIll1lIliIi1llI1iliIi, liIiilIilIiiIliIilI, lIlIIIliliIII1I11Il = iIliiI1iIl1i1lI11Il(l1Il1iIlIIIIii1IlIi) if iII11ll1iIIliiIl1il then if liIiilIilIiiIliIilI then return lIlllI1i1liIi1iIii1li(IIIII1Iilli1llilI1i, liIiilIilIiiIliIilI, lIlIIIliliIII1I11Il) end else Il1llill1ll1lIlllli("Luraph Script:" .. (lI11ll1i11lii11iIl1[iliil1l1iilI1i1I1l1 - 1] or "") .. ": " .. IIIIlllI1l1i1iIIilI(lIll1lIliIi1llI1iliIi), 0) end end ilil1l1IiIiiliiIIiI(llIiII111Ilillli1II, lIli11IilIiliiI1lIIii) return llIiII111Ilillli1II end local lIllI1iI1IIillIiiIli1 = i11Il1ll1llillIlIIi() return liIIliIii1i11li1i11(lIllI1iI1IIillIiiIli1, lIli11IilIiliiI1lIIii)() end IIl1I1I1l1iiIII11l1("LPH!", lIlI1Ii1iliiIli1lili1()) 