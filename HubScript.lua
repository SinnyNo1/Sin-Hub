local lI1i1l1ilIl11lIIl11 = assert local lllIi1lliI1iIIiIii1 = select local ll11llilIlI1ilI1II1 = tonumber local IilillilIiIiil1IIil = unpack local lIlIi1llIlI11I1iIiI1l = pcall local i1i1IIiiIliIl11lilI = setfenv local IiI1Ii11iil11IlIiIi = setmetatable local lIl1lillil1ilI1il11il = type local il1IIillll1IiIi1l1i = getfenv local iil11Iilili1lllill1 = tostring local l1liIIIilliI1I111iI = error local ll1ili1IIl1l1Iiii1i = string.sub local li1IiIi11l1lI1iI1iI = string.byte local ill111li111IIlliiil = string.char local lIl11iiIliiilII1lli1l = string.rep local lI1ill1i1l111Illlll = string.gsub local iiiIIIli11ii1iIlIli = string.match local Ii1l11lllIIIlI1lii1 = table.insert local l11ilIIiI1lliIlllIl = li1IiIi11l1lI1iI1iI("?", 1) local lIlliIIliliIIlIIi1Iil, Iilii11IIlllIIiliII = #{162}, #{ 5248, 118, 5101, 3126, 2037, 5725, 6402, 2489, 3415, 2274, 1846, 1062, 5393, 6179, 1303, 6067, 5636, 3316, 6038, 4254, 6463, 324, 1992 } + l11ilIIiI1lliIlllIl + 130985 local IiIIilIlI1iIi1IlII1 = {} local lIllliI1IIlil1iIlllli = 1 local lIlI1iIlllilIlIIi1iii, lIIl1IIllllIl11l1ii local function llliIIIIll1iIlIi1ii(iiil1I1ilii1IIi1l1I, ilI1ilI1i1IIiIilI11) local IiIl11lilllii1l111i iiil1I1ilii1IIi1l1I = lI1ill1i1l111Illlll(ll1ili1IIl1l1Iiii1i(iiil1I1ilii1IIi1l1I, 5), "..", function(lIl1I1Iii1III11I1i1i1) if li1IiIi11l1lI1iI1iI(lIl1I1Iii1III11I1i1i1, 2) == 72 then IiIl11lilllii1l111i = ll11llilIlI1ilI1II1(ll1ili1IIl1l1Iiii1i(lIl1I1Iii1III11I1i1i1, 1, 1)) return "" else local IIl11l1ll1IilIi1llI = ill111li111IIlliiil(ll11llilIlI1ilI1II1(lIl1I1Iii1III11I1i1i1, 16)) if IiIl11lilllii1l111i then local ilIi1IlIiIllllIlli1 = lIl11iiIliiilII1lli1l(IIl11l1ll1IilIi1llI, IiIl11lilllii1l111i) IiIl11lilllii1l111i = nil return ilIi1IlIiIllllIlli1 else return IIl11l1ll1IilIi1llI end end end) local function lIlIlliIl1I11Iii1ill1() local illIIII1iIllII1li11 = li1IiIi11l1lI1iI1iI(iiil1I1ilii1IIi1l1I, lIllliI1IIlil1iIlllli, lIllliI1IIlil1iIlllli) lIllliI1IIlil1iIlllli = lIllliI1IIlil1iIlllli + 1 return illIIII1iIllII1li11 end local function liiI1IiiiI1iI1lI1lI() local illIIII1iIllII1li11, IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1, ii1I1lIIIllliIlil1i = li1IiIi11l1lI1iI1iI(iiil1I1ilii1IIi1l1I, lIllliI1IIlil1iIlllli, lIllliI1IIlil1iIlllli + 3) lIllliI1IIlil1iIlllli = lIllliI1IIlil1iIlllli + 4 return ii1I1lIIIllliIlil1i * 16777216 + ilIi1IlIiIllllIlli1 * 65536 + IIl11l1ll1IilIi1llI * 256 + illIIII1iIllII1li11 end local function i1lll1iililiI11l1lI(IiIlll1iIiiIIl1ill1, l1lIiiIII11Iliiilil, l1llIIlIi1iIi1Ii11l) if l1llIIlIi1iIi1Ii11l then local llI1I1Il1III1l1Iill, IlIi1i1I1i1lI1II11I = 0, 0 for i1l1iI1IIl1IIliii11 = l1lIiiIII11Iliiilil, l1llIIlIi1iIi1Ii11l do llI1I1Il1III1l1Iill = llI1I1Il1III1l1Iill + 2 ^ IlIi1i1I1i1lI1II11I * i1lll1iililiI11l1lI(IiIlll1iIiiIIl1ill1, i1l1iI1IIl1IIliii11) IlIi1i1I1i1lI1II11I = IlIi1i1I1i1lI1II11I + 1 end return llI1I1Il1III1l1Iill else local iIiIil1iillllliIIll = 2 ^ (l1lIiiIII11Iliiilil - 1) return iIiIil1iillllliIIll <= IiIlll1iIiiIIl1ill1 % (iIiIil1iillllliIIll + iIiIil1iillllliIIll) and 1 or 0 end end local function IIiIiIlIIIIl1Il1iIl() local illIIII1iIllII1li11, IIl11l1ll1IilIi1llI = liiI1IiiiI1iI1lI1lI(), liiI1IiiiI1iI1lI1lI() if illIIII1iIllII1li11 == 0 and IIl11l1ll1IilIi1llI == 0 then return 0 end return (-2 * i1lll1iililiI11l1lI(IIl11l1ll1IilIi1llI, 32) + 1) * 2 ^ (i1lll1iililiI11l1lI(IIl11l1ll1IilIi1llI, 21, 31) - 1023) * ((i1lll1iililiI11l1lI(IIl11l1ll1IilIi1llI, 1, 20) * 4294967296 + illIIII1iIllII1li11) / 4503599627370496 + 1) end local lIllIiIli1I1111ilii1i = bit or bit32 local I11iI1llI1iilIll1lI = lIllIiIli1I1111ilii1i and lIllIiIli1I1111ilii1i.bxor or function(illIIII1iIllII1li11, IIl11l1ll1IilIi1llI) local lIl1IiiI1i11lI11lli1I = 1 local ilIi1IlIiIllllIlli1 = 0 while illIIII1iIllII1li11 > 0 and IIl11l1ll1IilIi1llI > 0 do local II1l1i1Ii11l11I1l1I = illIIII1iIllII1li11 % 2 local Il1l11lllii1il1il1I = IIl11l1ll1IilIi1llI % 2 if II1l1i1Ii11l11I1l1I ~= Il1l11lllii1il1il1I then ilIi1IlIiIllllIlli1 = ilIi1IlIiIllllIlli1 + lIl1IiiI1i11lI11lli1I end illIIII1iIllII1li11 = (illIIII1iIllII1li11 - II1l1i1Ii11l11I1l1I) / 2 IIl11l1ll1IilIi1llI = (IIl11l1ll1IilIi1llI - Il1l11lllii1il1il1I) / 2 lIl1IiiI1i11lI11lli1I = lIl1IiiI1i11lI11lli1I * 2 end if illIIII1iIllII1li11 < IIl11l1ll1IilIi1llI then illIIII1iIllII1li11 = IIl11l1ll1IilIi1llI end while illIIII1iIllII1li11 > 0 do local II1l1i1Ii11l11I1l1I = illIIII1iIllII1li11 % 2 if II1l1i1Ii11l11I1l1I > 0 then ilIi1IlIiIllllIlli1 = ilIi1IlIiIllllIlli1 + lIl1IiiI1i11lI11lli1I end illIIII1iIllII1li11 = (illIIII1iIllII1li11 - II1l1i1Ii11l11I1l1I) / 2 lIl1IiiI1i11lI11lli1I = lIl1IiiI1i11lI11lli1I * 2 end return ilIi1IlIiIllllIlli1 end local function l1lIiii1lIl111I1Ill(lIlilll1Ilill11lIlI) local iIi1IliiIIiI1liII1i = { li1IiIi11l1lI1iI1iI(iiil1I1ilii1IIi1l1I, lIllliI1IIlil1iIlllli, lIllliI1IIlil1iIlllli + 3) } lIllliI1IIlil1iIlllli = lIllliI1IIlil1iIlllli + 4 local illIIII1iIllII1li11 = I11iI1llI1iilIll1lI(iIi1IliiIIiI1liII1i[1], lIIl1IIllllIl11l1ii) local IIl11l1ll1IilIi1llI = I11iI1llI1iilIll1lI(iIi1IliiIIiI1liII1i[2], lIIl1IIllllIl11l1ii) local ilIi1IlIiIllllIlli1 = I11iI1llI1iilIll1lI(iIi1IliiIIiI1liII1i[3], lIIl1IIllllIl11l1ii) local ii1I1lIIIllliIlil1i = I11iI1llI1iilIll1lI(iIi1IliiIIiI1liII1i[4], lIIl1IIllllIl11l1ii) lIIl1IIllllIl11l1ii = (85 * lIIl1IIllllIl11l1ii + lIlilll1Ilill11lIlI) % 256 return ii1I1lIIIllliIlil1i * 16777216 + ilIi1IlIiIllllIlli1 * 65536 + IIl11l1ll1IilIi1llI * 256 + illIIII1iIllII1li11 end local function ilili1IiIIlll11lliI(Ii1liiIiIi1IilIIiI1) local i1Il1i1IllIll1iIi1l = liiI1IiiiI1iI1lI1lI() local l11ilil1IlIIlIli1II = "" for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, i1Il1i1IllIll1iIi1l do l11ilil1IlIIlIli1II = l11ilil1IlIIlIli1II .. ill111li111IIlliiil(I11iI1llI1iilIll1lI(li1IiIi11l1lI1iI1iI(iiil1I1ilii1IIi1l1I, lIllliI1IIlil1iIlllli + i1l1iI1IIl1IIliii11 - 1), lIlI1iIlllilIlIIi1iii)) lIlI1iIlllilIlIIi1iii = (Ii1liiIiIi1IilIIiI1 * lIlI1iIlllilIlIIi1iii + 83) % 256 end lIllliI1IIlil1iIlllli = lIllliI1IIlil1iIlllli + i1Il1i1IllIll1iIi1l return l11ilil1IlIIlIli1II end lIlI1iIlllilIlIIi1iii = lIlIlliIl1I11Iii1ill1() lIIl1IIllllIl11l1ii = lIlIlliIl1I11Iii1ill1() local li1l1Ili1ilII1Ii1ll = {} for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, lIlIlliIl1I11Iii1ill1() do local i11I11IIiiIiiI1ll1i = lIlIlliIl1I11Iii1ill1() local IlIIlllI1lIIlli1i1l = (i1l1iI1IIl1IIliii11 - 1) * 2 li1l1Ili1ilII1Ii1ll[IlIIlllI1lIIlli1i1l] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, 1, 4) li1l1Ili1ilII1Ii1ll[IlIIlllI1lIIlli1i1l + 1] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, 5, 8) end local function iill1lI1l1iIIllli11() local IIi1ll1iiIi11I1illl = { {}, {}, nil, {}, {}, nil, nil } lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() liiI1IiiiI1iI1lI1lI() liiI1IiiiI1iI1lI1lI() lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() liiI1IiiiI1iI1lI1lI() local II1iiIIii1I1iI1i1l1 = liiI1IiiiI1iI1lI1lI() for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, II1iiIIii1I1iI1i1l1 do IIi1ll1iiIi11I1illl[4][i1l1iI1IIl1IIliii11] = liiI1IiiiI1iI1lI1lI() end IIi1ll1iiIi11I1illl[6] = lIlIlliIl1I11Iii1ill1() local II1iiIIii1I1iI1i1l1 = liiI1IiiiI1iI1lI1lI() for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, II1iiIIii1I1iI1i1l1 do IIi1ll1iiIi11I1illl[2][i1l1iI1IIl1IIliii11 - lIlliIIliliIIlIIi1Iil] = iill1lI1l1iIIllli11() end liiI1IiiiI1iI1lI1lI() lIlIlliIl1I11Iii1ill1() IIi1ll1iiIi11I1illl[3] = lIlIlliIl1I11Iii1ill1() lIlIlliIl1I11Iii1ill1() lIlIlliIl1I11Iii1ill1() lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() lIlIlliIl1I11Iii1ill1() IIi1ll1iiIi11I1illl[7] = lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() lIlIlliIl1I11Iii1ill1() lIlIlliIl1I11Iii1ill1() local II1iiIIii1I1iI1i1l1 = liiI1IiiiI1iI1lI1lI() - (#{ 6210, 4588, 1733, 510, 6543, 308, 4603, 6741, 3080, 3838, 5524, 6743, 1381, 2589, 5219, 1048, 6290, 4790, 4151, 6767, 5160, 616 } + l11ilIIiI1lliIlllIl + 133651) local lIlIi1lli1lli1IiI1l1l = lIlIlliIl1I11Iii1ill1() for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, II1iiIIii1I1iI1i1l1 do local i11lII11i1lIlIiIi1l local lIl1lillil1ilI1il11il = lIlIlliIl1I11Iii1ill1() if lIl1lillil1ilI1il11il == #{ 1668, 2104, 3038, 1242, 5807, 2601, 544, 5368, 45, 5287, 6311, 6706, 6519, 2891, 3782, 2089, 3415, 1627, 5184, 3764, 1218, 5629, 4633 } + l11ilIIiI1lliIlllIl + -26 then i11lII11i1lIlIiIi1l = #{ 2425, 5723, 3895, 2774, 4340, 3829, 3790, 6163, 309, 4211, 3862, 3866, 971, 5850, 3347, 6684, 6248, 4300, 851, 5430, 5392 } + l11ilIIiI1lliIlllIl + 95892 == #{ 2425, 5723, 3895, 2774, 4340, 3829, 3790, 6163, 309, 4211, 3862, 3866, 971, 5850, 3347, 6684, 6248, 4300, 851, 5430, 5392 } + l11ilIIiI1lliIlllIl + 95892 end if lIl1lillil1ilI1il11il == #{ 191, 2933, 6269, 791, 5188, 4379, 1301, 4537, 6269, 4207, 1550, 6160, 1069, 2598, 1740, 270, 3981, 500, 6661, 845 } + l11ilIIiI1lliIlllIl + 19 then i11lII11i1lIlIiIi1l = IIiIiIlIIIIl1Il1iIl() end if lIl1lillil1ilI1il11il == #{ 1755, 4741, 3525, 4061, 3449, 5437, 1616, 6866, 4018, 5633, 2271, 3366, 6096, 4129, 4022, 3008, 5926, 1075, 2306, 4596, 2144, 1979 } + l11ilIIiI1lliIlllIl + 72 then i11lII11i1lIlIiIi1l = ll1ili1IIl1l1Iiii1i(ilili1IiIIlll11lliI(#{ 4430, 5792, 3553, 864, 4088, 5037, 3277, 4211, 711, 2505, 1003, 1949, 6340, 6184, 6611, 4550, 2370, 4682, 3185, 5839, 1872, 1061, 6855 } + l11ilIIiI1lliIlllIl + 34), #{ 2949, 2092, 6132, 572 }) end if lIl1lillil1ilI1il11il == #{ 4377, 5940, 6709, 6277, 5322, 5683, 6081, 6893, 2870, 1663, 867, 6180, 2979, 677, 1122, 6287, 3543, 1078, 345, 2938, 4967, 3636, 4635 } + l11ilIIiI1lliIlllIl + 159 then i11lII11i1lIlIiIi1l = IIiIiIlIIIIl1Il1iIl() end if lIl1lillil1ilI1il11il == #{ 6087, 5636, 4312, 2783, 1932, 4002, 2598, 2301, 5740, 2312, 6850, 151, 5678, 1137, 6902, 4580, 820, 1370, 3052, 6510 } + l11ilIIiI1lliIlllIl + 144 then i11lII11i1lIlIiIi1l = IIiIiIlIIIIl1Il1iIl() + IIiIiIlIIIIl1Il1iIl() end if lIl1lillil1ilI1il11il == #{ 4981, 5901, 4433, 995, 2005, 5227, 5669, 2369, 4944, 4231, 2475, 878, 305, 452, 3147, 5271, 5540, 2848, 5946, 1332, 6541 } + l11ilIIiI1lliIlllIl + 86 then i11lII11i1lIlIiIi1l = lIlIlliIl1I11Iii1ill1() + liiI1IiiiI1iI1lI1lI() + IIiIiIlIIIIl1Il1iIl() end if lIl1lillil1ilI1il11il == #{ 2478, 60, 4641, 3089, 1399, 389, 5428, 2452, 4692, 3635, 246, 4640, 1404, 6537, 4306, 2166, 3191, 4147, 4452, 1463, 6042, 2121 } + l11ilIIiI1lliIlllIl + -7 then i11lII11i1lIlIiIi1l = ll1ili1IIl1l1Iiii1i(ilili1IiIIlll11lliI(lIlIi1lli1lli1IiI1l1l), #{ 4897, 5648, 4015, 1394, 6285 }) end if lIl1lillil1ilI1il11il == #{ 433, 6901, 3726, 2208, 2259, 5856, 4206, 6228, 4606, 710, 116, 6796, 2270, 4959, 942, 5604, 2715 } then i11lII11i1lIlIiIi1l = #{ 1095, 4509, 6305, 188, 6314, 2270, 3586, 1268, 4313, 3035, 285, 6285, 3295, 1184, 810, 92, 87, 4895, 3714, 2111, 1754, 6644, 1325 } + l11ilIIiI1lliIlllIl + 29105 == #{ 3572, 550, 2349, 4633, 1814, 1006, 353, 2411, 3757, 1348, 3742, 4301, 588, 2207, 1579, 2309, 3508, 3770, 5038, 642, 3733, 2940, 5045, 3386 } + l11ilIIiI1lliIlllIl + 14213 end if lIl1lillil1ilI1il11il == #{ 6736, 6014, 6122, 5702, 5292, 5373, 376, 6763, 5253, 1841, 2374, 3281, 1399, 3071, 3480, 6824, 3706, 3569, 6702, 4209, 3116, 6055, 4284, 4935 } + l11ilIIiI1lliIlllIl + -5 then i11lII11i1lIlIiIi1l = ll1ili1IIl1l1Iiii1i(ilili1IiIIlll11lliI(insEncKey), #{ 6279, 463, 2002 }) end IIi1ll1iiIi11I1illl[1][i1l1iI1IIl1IIliii11 - lIlliIIliliIIlIIi1Iil] = i11lII11i1lIlIiIi1l end local lI1ll1I11111IIIiiiI = liiI1IiiiI1iI1lI1lI() - (#{ 1627, 4532, 5835, 4229, 3129, 4043, 2646, 1871, 5999, 54, 5340, 1367, 4232, 2720, 6508, 1623, 2033, 3543, 4770, 6098, 2922, 359 } + l11ilIIiI1lliIlllIl + 133670) local i1i1i1Il1liillII1Ii = lIlIlliIl1I11Iii1ill1() for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, lI1ll1I11111IIIiiiI do local l1lIiI11IIl1iililIl = { nil, nil, nil, nil, nil, nil, nil, nil, nil, nil } local i11I11IIiiIiiI1ll1i = l1lIiii1lIl111I1Ill(i1i1i1Il1liillII1Ii) l1lIiI11IIl1iililIl[90633] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{ 3316, 333, 1564, 6702, 1251, 2297, 1951, 5805, 3913, 645, 3921, 4628, 984, 1456, 5438, 1976, 2731, 4907, 6717, 2825, 3380, 1178 } + l11ilIIiI1lliIlllIl + -58, #{ 3707, 6677, 3852, 5850, 1367, 778, 94, 5235, 1064, 6605, 6844, 1088, 1210, 1046, 2136, 5945, 1789, 4938, 6684, 4983, 4713, 78, 3162, 1481 } + l11ilIIiI1lliIlllIl + -55) l1lIiI11IIl1iililIl[8] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{ 1229, 116, 5339, 6944, 3773, 6380, 6376, 1635, 994, 2020, 4800, 3524, 6882, 643, 6319, 2758, 5695, 2315, 2516 }, #{ 3277, 1637, 5426, 439, 1581, 4315, 3686, 1094, 3919, 6553, 3457, 6868, 1284, 1491, 3264, 2071, 682, 3270, 5529, 3113, 2138 } + l11ilIIiI1lliIlllIl + -58) l1lIiI11IIl1iililIl[1] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{ 3897, 1496, 1167, 4560, 6724, 5183, 363, 5940, 1028, 6024 }, #{ 5574, 6271, 1247, 5120, 2386, 4792, 6826, 5782, 3303, 6107, 934, 107, 3247, 2892, 4070, 2635, 3435, 5567 }) l1lIiI11IIl1iililIl[9] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{4929}, #{ 4817, 4743, 1523, 2872, 5548, 4891, 6125, 6651, 3210, 1914, 4057, 9, 2108, 3119, 4778, 1091, 857, 1040 }) l1lIiI11IIl1iililIl[3] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{ 85, 692, 4031, 1907, 4412, 2846, 3019, 3301, 360, 318, 2724, 3700, 486, 1883, 3144, 236, 1556, 5813, 861, 264, 3750, 3741 } + l11ilIIiI1lliIlllIl + -58, #{ 3111, 5976, 5490, 2695, 6461, 735, 4935, 283, 6558, 619, 6888, 4529, 4798, 794, 3071, 4655, 5859, 4562, 1363, 933 } + l11ilIIiI1lliIlllIl + -51) l1lIiI11IIl1iililIl[6] = i1lll1iililiI11l1lI(i11I11IIiiIiiI1ll1i, #{2726}, #{ 6786, 4663, 2817, 274, 712, 5670, 6830, 2444, 536 }) IIi1ll1iiIi11I1illl[5][i1l1iI1IIl1IIliii11] = l1lIiI11IIl1iililIl end for i1l1iI1IIl1IIliii11 = lIlliIIliliIIlIIi1Iil, lI1ll1I11111IIIiiiI do local l1lIiI11IIl1iililIl = IIi1ll1iiIi11I1illl[5][i1l1iI1IIl1IIliii11] local l11l1lIi1i1i11iiIll = li1l1Ili1ilII1Ii1ll[l1lIiI11IIl1iililIl[3]] if l11l1lIi1i1i11iiIll == #{ 3711, 682, 4411 } then if l1lIiI11IIl1iililIl[6] > 255 then l1lIiI11IIl1iililIl[4] = true l1lIiI11IIl1iililIl[5] = IIi1ll1iiIi11I1illl[1][l1lIiI11IIl1iililIl[6] - 256] end if l1lIiI11IIl1iililIl[1] > 255 then l1lIiI11IIl1iililIl[10] = true l1lIiI11IIl1iililIl[2] = IIi1ll1iiIi11I1illl[1][l1lIiI11IIl1iililIl[1] - 256] end end if l11l1lIi1i1i11iiIll == #{2261, 2491} and l1lIiI11IIl1iililIl[1] > 255 then l1lIiI11IIl1iililIl[10] = true l1lIiI11IIl1iililIl[2] = IIi1ll1iiIi11I1illl[1][l1lIiI11IIl1iililIl[1] - 256] end if l11l1lIi1i1i11iiIll == #{ 1998, 41, 3178, 1692 } then l1lIiI11IIl1iililIl[7] = IIi1ll1iiIi11I1illl[1][l1lIiI11IIl1iililIl[9]] end if l11l1lIi1i1i11iiIll == #{2600} and l1lIiI11IIl1iililIl[6] > 255 then l1lIiI11IIl1iililIl[4] = true l1lIiI11IIl1iililIl[5] = IIi1ll1iiIi11I1illl[1][l1lIiI11IIl1iililIl[6] - 256] end end lIlIlliIl1I11Iii1ill1() liiI1IiiiI1iI1lI1lI() liiI1IiiiI1iI1lI1lI() return IIi1ll1iiIi11I1illl end local function lIl1Il1II11l11Ii1Iiil(IIi1ll1iiIi11I1illl, ilI1ilI1i1IIiIilI11, lIlii1llIiiili1llIlll) local liilI11ii1iIiIiI1Ii, ililliliIi1liI1111i = 5, 8 local lIlIIl1liI1illliil11I = IIi1ll1iiIi11I1illl[5] local IiIIiiilI11II11llil = 3 local i1lii1I1liiiiIII11i = IIi1ll1iiIi11I1illl[2] local lIlillIiilIIIii11lI1I = IIi1ll1iiIi11I1illl[7] local lIll1II11I1l1I1ll1Iii = IIi1ll1iiIi11I1illl[6] local l1il1I1lIl1l1iiI11I = 3 local l1llIIili1I1IIiIIii = IIi1ll1iiIi11I1illl[4] local ilIiii1IIIl1IlIllI1 = 6 local function I1iI1lllIiiiIl1IilI(...) local IIII1l1llillii1iI11 = 0 local l1liii1lliiil1ilil1 = { IilillilIiIiil1IIil({}, 1, lIll1II11I1l1I1ll1Iii) } local llliIiIl1iiiill1IiI = 1 local lIllIli1lI1IIlililIlI = {} local lll1i1Ii1lIl1lIlliI = {} local ilI1ilI1i1IIiIilI11 = il1IIillll1IiIi1l1i() local ilIl11iiiliii1Il1Il = { ... } local IiIliIIlIli1iiiiil1 = #ilIl11iiiliii1Il1Il - 1 for i1l1iI1IIl1IIliii11 = 0, IiIliIIlIli1iiiiil1 do if i1l1iI1IIl1IIliii11 < lIlillIiilIIIii11lI1I then l1liii1lliiil1ilil1[i1l1iI1IIl1IIliii11] = ilIl11iiiliii1Il1Il[i1l1iI1IIl1IIliii11 + 1] end end local function l1lIliI1I11ll1lIiII(...) local ilIi1IlIiIllllIlli1 = lllIi1lliI1iIIiIii1("#", ...) local lillIlilIilI1l1IlI1 = { ... } return ilIi1IlIiIllllIlli1, lillIlilIilI1l1IlI1 end local function IlIi1lI1Ii1Iil1li11() while true do local liiI1llIIIl1lil1i1l = lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] local ili1liIlili1lii11Il = liiI1llIIIl1lil1i1l[3] llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI + 1 if ili1liIlili1lii11Il < 10 then if ili1liIlili1lii11Il < 5 then if ili1liIlili1lii11Il >= 2 then if ili1liIlili1lii11Il < 3 then if liiI1llIIIl1lil1i1l[1] == 192 then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI - 1 lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] = { [3] = 6, [8] = (liiI1llIIIl1lil1i1l[8] - 34) % 256, [6] = (liiI1llIIIl1lil1i1l[6] - 34) % 256 } else l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = #l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end elseif ili1liIlili1lii11Il ~= 4 then if liiI1llIIIl1lil1i1l[1] == 189 then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI - 1 lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] = { [3] = 11, [8] = (liiI1llIIIl1lil1i1l[8] - 104) % 256, [6] = (liiI1llIIIl1lil1i1l[6] - 104) % 256 } else for i1l1iI1IIl1IIliii11 = liiI1llIIIl1lil1i1l[8], liiI1llIIIl1lil1i1l[6] do l1liii1lliiil1ilil1[i1l1iI1IIl1IIliii11] = nil end end else local ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]][ilIi1IlIiIllllIlli1] end elseif ili1liIlili1lii11Il == 1 then l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = liiI1llIIIl1lil1i1l[6] ~= 0 if liiI1llIIIl1lil1i1l[1] ~= 0 then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI + 1 end else local IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[4] then IIl11l1ll1IilIi1llI = liiI1llIIIl1lil1i1l[5] else IIl11l1ll1IilIi1llI = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]][IIl11l1ll1IilIi1llI] = ilIi1IlIiIllllIlli1 end elseif ili1liIlili1lii11Il < 7 then if ili1liIlili1lii11Il ~= 6 then if liiI1llIIIl1lil1i1l[1] == 184 then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI - 1 lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] = { [3] = 8, [8] = (liiI1llIIIl1lil1i1l[8] - 242) % 256, [6] = (liiI1llIIIl1lil1i1l[6] - 242) % 256 } else l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end elseif liiI1llIIIl1lil1i1l[1] == 5 then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI - 1 lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] = { [3] = 5, [8] = (liiI1llIIIl1lil1i1l[8] - 170) % 256, [6] = (liiI1llIIIl1lil1i1l[6] - 170) % 256 } else lIllIli1lI1IIlililIlI[l1liii1lliiil1ilil1] = nil local IliIliIilI1lilIlll1 = liiI1llIIIl1lil1i1l[8] local Ii1Ii1lli1lIll1lII1 = liiI1llIIIl1lil1i1l[6] if Ii1Ii1lli1lIll1lII1 == 1 then return true end local IliII11iIII111IIlll = IliIliIilI1lilIlll1 + Ii1Ii1lli1lIll1lII1 - 2 if Ii1Ii1lli1lIll1lII1 == 0 then IliII11iIII111IIlll = IIII1l1llillii1iI11 end return true, IliIliIilI1lilIlll1, IliII11iIII111IIlll end elseif ili1liIlili1lii11Il >= 8 then if ili1liIlili1lii11Il == 9 then local lIlIIliI1IlIIIl1I1l1I = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] local ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8] + 1] = lIlIIliI1IlIIIl1I1l1I l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = lIlIIliI1IlIIIl1I1l1I[ilIi1IlIiIllllIlli1] else l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = lIlii1llIiiili1llIlll[liiI1llIIIl1lil1i1l[6]] end else local IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[4] then IIl11l1ll1IilIi1llI = liiI1llIIIl1lil1i1l[5] else IIl11l1ll1IilIi1llI = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = IIl11l1ll1IilIi1llI * ilIi1IlIiIllllIlli1 end elseif ili1liIlili1lii11Il < 15 then if ili1liIlili1lii11Il >= 12 then if ili1liIlili1lii11Il >= 13 then if ili1liIlili1lii11Il ~= 14 then local IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[4] then IIl11l1ll1IilIi1llI = liiI1llIIIl1lil1i1l[5] else IIl11l1ll1IilIi1llI = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = IIl11l1ll1IilIi1llI / ilIi1IlIiIllllIlli1 else ilI1ilI1i1IIiIilI11[liiI1llIIIl1lil1i1l[7]] = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] end else l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = liiI1llIIIl1lil1i1l[7] end elseif ili1liIlili1lii11Il == 11 then lIlii1llIiiili1llIlll[liiI1llIIIl1lil1i1l[6]] = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] else local IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[4] then IIl11l1ll1IilIi1llI = liiI1llIIIl1lil1i1l[5] else IIl11l1ll1IilIi1llI = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end if IIl11l1ll1IilIi1llI == ilIi1IlIiIllllIlli1 ~= (liiI1llIIIl1lil1i1l[8] ~= 0) then llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI + 1 end end elseif ili1liIlili1lii11Il >= 18 then if ili1liIlili1lii11Il >= 19 then if ili1liIlili1lii11Il ~= 20 then l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = ilI1ilI1i1IIiIilI11[liiI1llIIIl1lil1i1l[7]] else local lIl1iIlIl111i1lIiIllI = i1lii1I1liiiiIII11i[liiI1llIIIl1lil1i1l[9]] local iIi1i1IIiiIll1lliII = {} if lIl1iIlIl111i1lIiIllI[IiIIiiilI11II11llil] > 0 then do local lIiiIi1i1I1i1Ili11i = {} iIi1i1IIiiIll1lliII = IiI1Ii11iil11IlIiIi({}, { __index = function(lillIlilIilI1l1IlI1, lIlIIIill11ilIIiIl1II) local lIli1liiiiIii1i1ilIil = lIiiIi1i1I1i1Ili11i[lIlIIIill11ilIIiIl1II] return lIli1liiiiIii1i1ilIil[1][lIli1liiiiIii1i1ilIil[2]] end, __newindex = function(lillIlilIilI1l1IlI1, lIlIIIill11ilIIiIl1II, lIlIil1iI1l1IlIIiiiIi) local lIli1liiiiIii1i1ilIil = lIiiIi1i1I1i1Ili11i[lIlIIIill11ilIIiIl1II] lIli1liiiiIii1i1ilIil[1][lIli1liiiiIii1i1ilIil[2]] = lIlIil1iI1l1IlIIiiiIi end }) for i1l1iI1IIl1IIliii11 = 1, lIl1iIlIl111i1lIiIllI[IiIIiiilI11II11llil] do local lIlIil1II11illliliIlI = lIlIIl1liI1illliil11I[llliIiIl1iiiill1IiI] if lIlIil1II11illliliIlI[l1il1I1lIl1l1iiI11I] == liilI11ii1iIiIiI1Ii then lIiiIi1i1I1i1Ili11i[i1l1iI1IIl1IIliii11 - 1] = { l1liii1lliiil1ilil1, lIlIil1II11illliliIlI[ilIiii1IIIl1IlIllI1] } elseif lIlIil1II11illliliIlI[l1il1I1lIl1l1iiI11I] == ililliliIi1liI1111i then lIiiIi1i1I1i1Ili11i[i1l1iI1IIl1IIliii11 - 1] = { lIlii1llIiiili1llIlll, lIlIil1II11illliliIlI[ilIiii1IIIl1IlIllI1] } end llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI + 1 end if not lIllIli1lI1IIlililIlI[l1liii1lliiil1ilil1] then lIllIli1lI1IIlililIlI[l1liii1lliiil1ilil1] = {lIiiIi1i1I1i1Ili11i} else Ii1l11lllIIIlI1lii1(lIllIli1lI1IIlililIlI[l1liii1lliiil1ilil1], lIiiIi1i1I1i1Ili11i) end end end local IIil1i1iIi1IiIIi1lI = lIl1Il1II11l11Ii1Iiil(lIl1iIlIl111i1lIiIllI, ilI1ilI1i1IIiIilI11, iIi1i1IIiiIll1lliII) l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = IIil1i1iIi1IiIIi1lI end else llliIiIl1iiiill1IiI = llliIiIl1iiiill1IiI + (liiI1llIIIl1lil1i1l[9] - Iilii11IIlllIIiliII) end elseif ili1liIlili1lii11Il >= 16 then if ili1liIlili1lii11Il ~= 17 then local IIl11l1ll1IilIi1llI, ilIi1IlIiIllllIlli1 if liiI1llIIIl1lil1i1l[4] then IIl11l1ll1IilIi1llI = liiI1llIIIl1lil1i1l[5] else IIl11l1ll1IilIi1llI = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[6]] end if liiI1llIIIl1lil1i1l[10] then ilIi1IlIiIllllIlli1 = liiI1llIIIl1lil1i1l[2] else ilIi1IlIiIllllIlli1 = l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[1]] end l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = IIl11l1ll1IilIi1llI + ilIi1IlIiIllllIlli1 else local IliIliIilI1lilIlll1 = liiI1llIIIl1lil1i1l[8] local ilIl11iiiliii1Il1Il = liiI1llIIIl1lil1i1l[6] local liilIl1iliilii111Ii = liiI1llIIIl1lil1i1l[1] local lIl11lI11111iI1I1llIl, IliII11iIII111IIlll, IlIi1lI1Ii1Iil1li11 if ilIl11iiiliii1Il1Il ~= 1 then if ilIl11iiiliii1Il1Il ~= 0 then IliII11iIII111IIlll = IliIliIilI1lilIlll1 + ilIl11iiiliii1Il1Il - 1 else IliII11iIII111IIlll = IIII1l1llillii1iI11 end IliII11iIII111IIlll, lIl11lI11111iI1I1llIl = l1lIliI1I11ll1lIiII(l1liii1lliiil1ilil1[IliIliIilI1lilIlll1](IilillilIiIiil1IIil(l1liii1lliiil1ilil1, IliIliIilI1lilIlll1 + 1, IliII11iIII111IIlll))) else IliII11iIII111IIlll, lIl11lI11111iI1I1llIl = l1lIliI1I11ll1lIiII(l1liii1lliiil1ilil1[IliIliIilI1lilIlll1]()) end if liilIl1iliilii111Ii ~= 1 then if liilIl1iliilii111Ii ~= 0 then IliII11iIII111IIlll = IliIliIilI1lilIlll1 + liilIl1iliilii111Ii - 2 IIII1l1llillii1iI11 = IliII11iIII111IIlll + 1 else IliII11iIII111IIlll = IliII11iIII111IIlll + IliIliIilI1lilIlll1 - 1 IIII1l1llillii1iI11 = IliII11iIII111IIlll end IlIi1lI1Ii1Iil1li11 = 0 for i1l1iI1IIl1IIliii11 = IliIliIilI1lilIlll1, IliII11iIII111IIlll do IlIi1lI1Ii1Iil1li11 = IlIi1lI1Ii1Iil1li11 + 1 l1liii1lliiil1ilil1[i1l1iI1IIl1IIliii11] = lIl11lI11111iI1I1llIl[IlIi1lI1Ii1Iil1li11] end else IIII1l1llillii1iI11 = IliIliIilI1lilIlll1 - 1 end for i1l1iI1IIl1IIliii11 = IIII1l1llillii1iI11 + 1, lIll1II11I1l1I1ll1Iii do l1liii1lliiil1ilil1[i1l1iI1IIl1IIliii11] = nil end end else l1liii1lliiil1ilil1[liiI1llIIIl1lil1i1l[8]] = { IilillilIiIiil1IIil(IiIIilIlI1iIi1IlII1, 1, liiI1llIIIl1lil1i1l[6] == 0 and 255 or liiI1llIIIl1lil1i1l[6]) } end end end local lIl1IlI1iIllil1IIiiIl, l11ilil1IlIIlIli1II, i11IlI11ilI11i1ii1I, llI1lilIili1II1IiIi = lIlIi1llIlI11I1iIiI1l(IlIi1lI1Ii1Iil1li11) if lIl1IlI1iIllil1IIiiIl then if i11IlI11ilI11i1ii1I then return IilillilIiIiil1IIil(l1liii1lliiil1ilil1, i11IlI11ilI11i1ii1I, llI1lilIili1II1IiIi) end else l1liIIIilliI1I111iI("Luraph Script:" .. (l1llIIili1I1IIiIIii[llliIiIl1iiiill1IiI - 1] or "") .. ": " .. iil11Iilili1lllill1(l11ilil1IlIIlIli1II), 0) end end i1i1IIiiIliIl11lilI(I1iI1lllIiiiIl1IilI, ilI1ilI1i1IIiIilI11) return I1iI1lllIiiiIl1IilI end local lIl1l1llIiiilll1ll1l1 = iill1lI1l1iIIllli11() return lIl1Il1II11l11Ii1Iiil(lIl1l1llIiiilll1ll1l1, ilI1ilI1i1IIiIilI11)() end llliIIIIll1iIlIi1iiil1IIillll1IiIi1l1i()) 